{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { emptyImageFilter } from \"./../utils/mixins\";\nimport usersAPI from \"./../apis/users\";\nimport { Toast } from \"./../utils/helpers\";\nexport default {\n  mixins: [emptyImageFilter],\n  props: {\n    initialRestaurant: {\n      type: Object,\n      require: true\n    }\n  },\n\n  // 為何會下data 可能是因為沒有用v-for\n  data() {\n    return {\n      restaurant: this.initialRestaurant\n    };\n  },\n\n  methods: {\n    async addFavorite(restaurantId) {\n      try {\n        const {\n          data\n        } = await usersAPI.addFavorite({\n          restaurantId\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.restaurant = { ...this.restaurant,\n          isFavorited: true,\n          FavoriteCount: this.restaurant.FavoriteCount + 1\n        };\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法將餐廳加入最愛，請稍後再試\"\n        });\n      }\n    },\n\n    async deleteFavorite(restaurantId) {\n      try {\n        const {\n          data\n        } = await usersAPI.deleteFavorite({\n          restaurantId\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.restaurant = { ...this.restaurant,\n          // 保留餐廳內原有資料\n          isFavorited: false,\n          FavoriteCount: this.restaurant.FavoriteCount - 1\n        };\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法將餐廳移除最愛，請稍後再試\"\n        });\n      }\n    },\n\n    async addLike(restaurantId) {\n      try {\n        const {\n          data\n        } = await usersAPI.addLike({\n          restaurantId\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.restaurant = { ...this.restaurant,\n          isLiked: true\n        };\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法對餐廳按讚，請稍後再試\"\n        });\n      }\n    },\n\n    async deleteLike(restaurantId) {\n      try {\n        const {\n          data\n        } = await usersAPI.deleteLike({\n          restaurantId\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.restaurant = { ...this.restaurant,\n          isLiked: false\n        };\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法對取消讚，請稍後再試\"\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAgEA;AACA;AACA;AACA;EACAA,0BADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;;EAQA;EACAC;IACA;MACAC;IADA;EAGA,CAbA;;EAcAC;IACA;MACA;QACA;UAAAF;QAAA;UAAAG;QAAA;;QACA;UACA;QACA;;QACA,oBACA,kBADA;UAEAC,iBAFA;UAGAC;QAHA;MAKA,CAVA,CAUA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAlBA;;IAmBA;MACA;QACA;UAAAR;QAAA;UAAAG;QAAA;;QACA;UACA;QACA;;QACA,oBACA,kBADA;UACA;UACAC,kBAFA;UAGAC;QAHA;MAKA,CAVA,CAUA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CApCA;;IAqCA;MACA;QACA;UAAAR;QAAA;UAAAG;QAAA;;QACA;UACA;QACA;;QACA,oBACA,kBADA;UAEAM;QAFA;MAIA,CATA,CASA;QACAH;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CArDA;;IAsDA;MACA;QACA;UAAAR;QAAA;UAAAG;QAAA;;QACA;UACA;QACA;;QACA,oBACA,kBADA;UAEAM;QAFA;MAIA,CATA,CASA;QACAH;UACAC,aADA;UAEAC;QAFA;MAIA;IACA;;EAtEA;AAdA","names":["mixins","props","initialRestaurant","type","require","data","restaurant","methods","restaurantId","isFavorited","FavoriteCount","Toast","icon","title","isLiked"],"sourceRoot":"src/components","sources":["RestaurantCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-md-6 col-lg-4\">\r\n    <div class=\"card mb-4\">\r\n      <img\r\n        class=\"card-img-top\"        \r\n        :src=\"restaurant5.image\"\r\n        alt=\"Card image cap\"\r\n        width=\"286px\"\r\n        height=\"180px\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text title-wrap\">\r\n          <router-link\r\n            :to=\"{ name: 'restaurant', params: { id: restaurant.id } }\"\r\n          >\r\n            {{ restaurant.name }}\r\n          </router-link>\r\n        </p>\r\n        <span class=\"badge badge-secondary\">{{\r\n          restaurant.Category.name\r\n        }}</span>\r\n        <p class=\"card-text text-truncate\">\r\n          {{ restaurant.description }}\r\n        </p>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <button\r\n          v-if=\"restaurant.isFavorited\"\r\n          @click.stop.prevent=\"deleteFavorite(restaurant.id)\"\r\n          type=\"button\"\r\n          class=\"btn btn-danger btn-border favorite mr-2\"\r\n        >\r\n          移除最愛\r\n        </button>\r\n        <button\r\n          v-else\r\n          @click.stop.prevent=\"addFavorite(restaurant.id)\"\r\n          type=\"button\"\r\n          class=\"btn btn-primary btn-border favorite mr-2\"\r\n        >\r\n          加到最愛\r\n        </button>\r\n        <button\r\n          v-if=\"restaurant.isLiked\"\r\n          @click.stop.prevent=\"deleteLike(restaurant.id)\"\r\n          type=\"button\"\r\n          class=\"btn btn-danger like mr-2\"\r\n        >\r\n          Unlike\r\n        </button>\r\n        <button\r\n          v-else\r\n          @click.stop.prevent=\"addLike(restaurant.id)\"\r\n          type=\"button\"\r\n          class=\"btn btn-primary like mr-2\"\r\n        >\r\n          Like\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { emptyImageFilter } from \"./../utils/mixins\";\r\nimport usersAPI from \"./../apis/users\";\r\nimport { Toast } from \"./../utils/helpers\";\r\nexport default {\r\n  mixins: [emptyImageFilter],\r\n  props: {\r\n    initialRestaurant: {\r\n      type: Object,\r\n      require: true,\r\n    },\r\n  },\r\n  // 為何會下data 可能是因為沒有用v-for\r\n  data() {\r\n    return {\r\n      restaurant: this.initialRestaurant,\r\n    };\r\n  },\r\n  methods: {\r\n    async addFavorite(restaurantId) {\r\n      try {\r\n        const { data } = await usersAPI.addFavorite({ restaurantId });\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message);\r\n        }\r\n        this.restaurant = {\r\n          ...this.restaurant,\r\n          isFavorited: true,\r\n          FavoriteCount: this.restaurant.FavoriteCount + 1,\r\n        };\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法將餐廳加入最愛，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n    async deleteFavorite(restaurantId) {\r\n      try {\r\n        const { data } = await usersAPI.deleteFavorite({ restaurantId });\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message);\r\n        }\r\n        this.restaurant = {\r\n          ...this.restaurant, // 保留餐廳內原有資料\r\n          isFavorited: false,\r\n          FavoriteCount: this.restaurant.FavoriteCount - 1,\r\n        };\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法將餐廳移除最愛，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n    async addLike(restaurantId) {\r\n      try {\r\n        const { data } = await usersAPI.addLike({ restaurantId });\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message);\r\n        }\r\n        this.restaurant = {\r\n          ...this.restaurant,\r\n          isLiked: true,\r\n        };\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法對餐廳按讚，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n    async deleteLike(restaurantId) {\r\n      try {\r\n        const { data } = await usersAPI.deleteLike({ restaurantId });\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message);\r\n        }\r\n        this.restaurant = {\r\n          ...this.restaurant,\r\n          isLiked: false,\r\n        };\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法對取消讚，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}