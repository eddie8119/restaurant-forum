{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport NavTabs from \"../components/NavTabs.vue\";\nimport usersAPI from \"./../apis/users\";\nimport { Toast } from \"./../utils/helpers\";\nimport { emptyImageFilter } from './../utils/mixins';\nexport default {\n  components: {\n    NavTabs\n  },\n  mixins: [emptyImageFilter],\n\n  data() {\n    return {\n      users: []\n    };\n  },\n\n  created() {\n    this.fetchTopUsers();\n  },\n\n  methods: {\n    async fetchTopUsers() {\n      try {\n        const {\n          data\n        } = await usersAPI.getTopUsers();\n        console.log(data);\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        this.users = data.users.map(user => ({\n          id: user.id,\n          name: user.name,\n          image: user.image,\n          followerCount: user.FollowerCount,\n          isFollowed: user.isFollowed\n        }));\n      } catch (error) {\n        console.log(error.message);\n        console.log(error);\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法取得美食達人，請稍後再試\"\n        });\n      }\n    },\n\n    async addFollowing(userId) {\n      try {\n        const {\n          data\n        } = await usersAPI.addFollowing({\n          userId\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.users = data.users.map(user => {\n          if (user.id !== userId) {\n            return user;\n          } else {\n            return { ...user\n            };\n          } // id: user.id,\n          // name: user.name,\n          // image: user.image,          \n          // followerCount: user.FollowerCount,\n          // isFollowed: user.isFollowed,\n\n        }); //         this.users = data.users.map(user => ({\n        //   id: user.id,\n        //   name: user.name,\n        //   image: user.image,          \n        //   followerCount: user.FollowerCount,\n        //   isFollowed: user.isFollowed,\n        // }))\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法加入追蹤，請稍後再試\"\n        });\n      } // async addFollowing(userId) {\n      //   try {\n      //     const { data } = await usersAPI.addFollowing({ userId });\n      //     this.users = this.users.map((user) => {\n      //       if (user.id !== userId) {\n      //         return user;\n      //       } else {\n      //         return {\n      //           ...user,\n      //           followerCount: user.followerCount + 1,\n      //           isFollowed: true,\n      //         };\n      //       }\n      //     });\n      //   } catch (error) {\n      //     Toast.fire({\n      //       icon: \"error\",\n      //       title: \"無法加入追蹤，請稍後再試\",\n      //     });\n      //   }\n      // },\n      // async deleteFollowing(userId) {\n      //   try {\n      //     const { data } = await usersAPI.deleteFollowing({ userId });\n      //     if (data.status !== \"success\") {\n      //       throw new Error(data.message);\n      //     }\n      //     this.users = this.users.map((user) => {\n      //       if (user.id !== userId) {\n      //         return user;\n      //       } else {\n      //         return {\n      //           ...user,\n      //           followerCount: user.followerCount - 1,\n      //           isFollowed: false,\n      //         };\n      //       }\n      //     });\n      //   } catch (error) {\n      //     Toast.fire({\n      //       icon: \"error\",\n      //       title: \"無法取消追蹤，請稍後再試\",\n      //     });\n      //   }\n      // },\n\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAsCA;AACA;AACA;AACA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,0BAJA;;EAKAC;IACA;MACAC;IADA;EAGA,CATA;;EAUAC;IACA;EACA,CAZA;;EAaAC;IACA;MACA;QACA;UAAAH;QAAA;QACAI;;QAEA;UACA;QACA;;QAEA;UACAC,WADA;UAEAC,eAFA;UAGAC,iBAHA;UAIAC,iCAJA;UAKAC;QALA;MAOA,CAfA,CAeA;QACAL;QACAA;QACAM;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAzBA;;IA0BA;MACA;QACA;UAAAZ;QAAA;UAAAa;QAAA;;QAEA;UACA;QACA;;QAEA;UACA;YACA;UACA,CAFA,MAEA;YACA,SACA;YADA;UAIA,CARA,CASA;UACA;UACA;UACA;UACA;;QACA,CAdA,EAPA,CA2BA;QACA;QACA;QACA;QACA;QACA;QACA;MAMA,CAvCA,CAuCA;QACAH;UACAC,aADA;UAEAC;QAFA;MAIA,CA7CA,CA+CA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IACA;;EAzHA;AAbA","names":["components","NavTabs","mixins","data","users","created","methods","console","id","name","image","followerCount","isFollowed","Toast","icon","title","userId"],"sourceRoot":"src/views","sources":["UsersTop.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <NavTabs />\r\n    <h1 class=\"mt-5\">美食達人</h1>\r\n    <hr />\r\n    <div class=\"row text-center\">      \r\n      <div v-for=\"user in users\" :key=\"user.id\" class=\"col-3\">\r\n        <router-link :to=\"{ name: 'user', params: { id: user.id }  }\">\r\n          <img :src=\"user.image | emptyImage\" width=\"140px\" height=\"140px\" />\r\n        </router-link>\r\n        <h2>{{ user.name }}</h2>\r\n        <span class=\"badge badge-secondary\"\r\n          >追蹤人數：{{ user.followerCount }}</span          \r\n        >\r\n        <p class=\"mt-3\">\r\n          <button\r\n            v-if=\"user.isFollowed\"\r\n            @click.stop.prevent=\"deleteFollower(user.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger\"\r\n          >\r\n            取消追蹤\r\n          </button>\r\n          <button\r\n            v-else\r\n            @click.stop.prevent=\"addFollower(user.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n          >\r\n            追蹤\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavTabs from \"../components/NavTabs.vue\";\r\nimport usersAPI from \"./../apis/users\";\r\nimport { Toast } from \"./../utils/helpers\";\r\nimport { emptyImageFilter } from './../utils/mixins'\r\n\r\nexport default {\r\n  components: {\r\n    NavTabs,    \r\n  },\r\n  mixins: [emptyImageFilter],\r\n  data() {\r\n    return {\r\n      users: [],\r\n    };    \r\n  },\r\n  created() {\r\n    this.fetchTopUsers();\r\n  },\r\n  methods: {\r\n    async fetchTopUsers() {\r\n      try {\r\n        const { data } = await usersAPI.getTopUsers();  \r\n        console.log(data);      \r\n        \r\n        if (data.status === 'error') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        this.users = data.users.map(user => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          image: user.image,          \r\n          followerCount: user.FollowerCount,\r\n          isFollowed: user.isFollowed,\r\n        }))\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        console.log(error);\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法取得美食達人，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n    async addFollowing(userId){\r\n      try {\r\n        const { data } = await usersAPI.addFollowing({userId});\r\n\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message);\r\n        }\r\n\r\n        this.users = data.users.map(user => {\r\n          if (user.id !== userId) {\r\n            return user;\r\n          } else {\r\n            return {\r\n              ...user\r\n            }\r\n\r\n          }\r\n          // id: user.id,\r\n          // name: user.name,\r\n          // image: user.image,          \r\n          // followerCount: user.FollowerCount,\r\n          // isFollowed: user.isFollowed,\r\n        })\r\n\r\n\r\n\r\n        \r\n\r\n        //         this.users = data.users.map(user => ({\r\n        //   id: user.id,\r\n        //   name: user.name,\r\n        //   image: user.image,          \r\n        //   followerCount: user.FollowerCount,\r\n        //   isFollowed: user.isFollowed,\r\n        // }))\r\n\r\n\r\n\r\n         \r\n              \r\n      } catch(error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法加入追蹤，請稍後再試\",\r\n        });\r\n      }      \r\n    \r\n    // async addFollowing(userId) {\r\n    //   try {\r\n    //     const { data } = await usersAPI.addFollowing({ userId });\r\n    \r\n    //     this.users = this.users.map((user) => {\r\n    //       if (user.id !== userId) {\r\n    //         return user;\r\n    //       } else {\r\n    //         return {\r\n    //           ...user,\r\n    //           followerCount: user.followerCount + 1,\r\n    //           isFollowed: true,\r\n    //         };\r\n    //       }\r\n    //     });\r\n    //   } catch (error) {\r\n    //     Toast.fire({\r\n    //       icon: \"error\",\r\n    //       title: \"無法加入追蹤，請稍後再試\",\r\n    //     });\r\n    //   }\r\n    // },\r\n    // async deleteFollowing(userId) {\r\n    //   try {\r\n    //     const { data } = await usersAPI.deleteFollowing({ userId });\r\n\r\n    //     if (data.status !== \"success\") {\r\n    //       throw new Error(data.message);\r\n    //     }\r\n\r\n    //     this.users = this.users.map((user) => {\r\n    //       if (user.id !== userId) {\r\n    //         return user;\r\n    //       } else {\r\n    //         return {\r\n    //           ...user,\r\n    //           followerCount: user.followerCount - 1,\r\n    //           isFollowed: false,\r\n    //         };\r\n    //       }\r\n    //     });\r\n    //   } catch (error) {\r\n    //     Toast.fire({\r\n    //       icon: \"error\",\r\n    //       title: \"無法取消追蹤，請稍後再試\",\r\n    //     });\r\n    //   }\r\n    // },\r\n    },\r\n  }\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}