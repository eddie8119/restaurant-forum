{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport authorizationAPI from \"./../apis/authorization\";\nimport { Toast } from \"./../utils/helpers\";\nexport default {\n  name: \"SignUp\",\n\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordCheck: \"\",\n      isProcessing: false\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      try {\n        this.isProcessing = true;\n        const formData = {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          passwordCheck: this.passwordCheck\n        };\n\n        if (!this.name || !this.email || !this.password || !this.passwordCheck) {\n          this.isProcessing = false;\n          Toast.fire({\n            icon: 'warning',\n            title: '請輸入完整資料'\n          });\n          return;\n        } else if (this.password !== this.passwordCheck) {\n          this.isProcessing = false;\n          Toast.fire({\n            icon: 'warning',\n            title: '請輸入相同密碼'\n          });\n          return;\n        }\n\n        const {\n          data\n        } = await authorizationAPI.create({\n          formData\n        });\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n\n        this.$router.push({\n          name: \"restaurants\"\n        });\n      } catch (error) {\n        this.isProcessing = false;\n        Toast.fire({\n          icon: \"error\",\n          title: \"註冊失敗，請稍後再試\"\n        });\n      }\n    } // async handleSubmit() {\n    //   try {\n    //     if (!this.name || \n    //         !this.email ||\n    //         !this.password || \n    //         !this.passwordCheck            \n    //     ) {\n    //       Toast.fire({\n    //         icon: \"warning\",\n    //         title: \"請確認已填寫所有欄位\",\n    //       });\n    //       return\n    //     } \n    //     if (this.password !== this.passwordCheck) {\n    //       Toast.fire({\n    //         icon: \"warning\",\n    //         title: \"密碼 和 確認密碼 不相符合\",\n    //       });          \n    //       this.passwordCheck= ''\n    //       return \n    //     }              \n    //     const {data} = await authorizationAPI.signUp({\n    //       name: this.name,\n    //       email: this.email,\n    //       password: this.password,\n    //       passwordCheck: this.passwordCheck,\n    //     })\n    //     if (data.status === 'error') {\n    //       throw new Error(data.message)\n    //     }\n    //     Toast.fire({\n    //       icon: 'success',\n    //       title: data.message\n    //     })\n    //     // 成功登入後轉址到登入頁\n    //     this.$router.push('/signin')\n    //   } catch (error) {              \n    //     Toast.fire({\n    //       icon: \"warning\",\n    //       title: \"無法註冊 - ${error.message}\",\n    //     });        \n    //   } \n    // },\n\n\n  }\n};","map":{"version":3,"mappings":";AAgFA;AACA;AAEA;EACAA,cADA;;EAEAC;IACA;MACAD,QADA;MAEAE,SAFA;MAGAC,YAHA;MAIAC,iBAJA;MAKAC;IALA;EAOA,CAVA;;EAWAC;IACA;MACA;QACA;QAEA;UACAN,eADA;UAEAE,iBAFA;UAGAC,uBAHA;UAIAC;QAJA;;QAOA,IACA,cACA,WADA,IAEA,cAFA,IAGA,mBAJA,EAKA;UACA;UACAG;YACAC,eADA;YAEAC;UAFA;UAIA;QACA,CAZA,MAYA;UACA;UACAF;YACAC,eADA;YAEAC;UAFA;UAIA;QACA;;QAEA;UAAAR;QAAA;UAAAS;QAAA;;QAEA;UACA;QACA;;QAEA;UAAAV;QAAA;MACA,CAtCA,CAsCA;QACA;QACAO;UACAC,aADA;UAEAC;QAFA;MAKA;IACA,CAhDA,CAiDA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EA/FA;AAXA","names":["name","data","email","password","passwordCheck","isProcessing","methods","Toast","icon","title","formData"],"sourceRoot":"src/views","sources":["SignUp.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\" @submit.prevent.stop=\"handleSubmit\">\r\n    <form class=\"w-100\">\r\n      <div class=\"text-center mb-4\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Sign Up</h1>\r\n      </div>\r\n\r\n      <div class=\"form-label-group mb-2\">\r\n        <label for=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          v-model=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"name\"\r\n          autocomplete=\"username\"\r\n          required\r\n          autofocus\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-label-group mb-2\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          v-model=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"email\"\r\n          autocomplete=\"email\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-label-group mb-3\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Password\"\r\n          autocomplete=\"new-password\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-label-group mb-3\">\r\n        <label for=\"password-check\">Password Check</label>\r\n        <input\r\n          id=\"password-check\"\r\n          v-model=\"passwordCheck\"\r\n          name=\"passwordCheck\"\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Password\"\r\n          autocomplete=\"new-password\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button class=\"btn btn-lg btn-primary btn-block mb-3\" type=\"submit\">\r\n        Submit\r\n      </button>\r\n\r\n      <div class=\"text-center mb-3\">\r\n        <p>\r\n          <router-link to=\"/signin\"> Sign In </router-link>\r\n        </p>\r\n      </div>\r\n\r\n      <p class=\"mt-5 mb-3 text-muted text-center\">&copy; 2017-2018</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authorizationAPI from \"./../apis/authorization\";\r\nimport { Toast } from \"./../utils/helpers\";\r\n\r\nexport default {\r\n  name: \"SignUp\",\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordCheck: \"\", \r\n      isProcessing: false\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      try {\r\n        this.isProcessing = true\r\n        \r\n        const formData = {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n          passwordCheck: this.passwordCheck,\r\n        };\r\n\r\n        if (\r\n          !this.name ||\r\n          !this.email ||\r\n          !this.password ||\r\n          !this.passwordCheck\r\n        ) {\r\n          this.isProcessing = false\r\n          Toast.fire({\r\n            icon: 'warning',\r\n            title: '請輸入完整資料'\r\n          })\r\n          return\r\n        } else if (this.password !== this.passwordCheck) {\r\n          this.isProcessing = false\r\n          Toast.fire({\r\n            icon: 'warning',\r\n            title: '請輸入相同密碼'\r\n          })\r\n          return\r\n        }\r\n\r\n        const { data } = await authorizationAPI.create({ formData })\r\n\r\n        if (data.status !== \"success\") {\r\n          throw new Error(data.message)\r\n        }\r\n        \r\n        this.$router.push({ name: \"restaurants\" })\r\n      } catch(error) {\r\n        this.isProcessing = false\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"註冊失敗，請稍後再試\"\r\n        })\r\n\r\n      }\r\n    }\r\n    // async handleSubmit() {\r\n    //   try {\r\n    //     if (!this.name || \r\n    //         !this.email ||\r\n    //         !this.password || \r\n    //         !this.passwordCheck            \r\n    //     ) {\r\n    //       Toast.fire({\r\n    //         icon: \"warning\",\r\n    //         title: \"請確認已填寫所有欄位\",\r\n    //       });\r\n    //       return\r\n    //     } \r\n\r\n    //     if (this.password !== this.passwordCheck) {\r\n    //       Toast.fire({\r\n    //         icon: \"warning\",\r\n    //         title: \"密碼 和 確認密碼 不相符合\",\r\n    //       });          \r\n    //       this.passwordCheck= ''\r\n    //       return \r\n    //     }              \r\n\r\n    //     const {data} = await authorizationAPI.signUp({\r\n    //       name: this.name,\r\n    //       email: this.email,\r\n    //       password: this.password,\r\n    //       passwordCheck: this.passwordCheck,\r\n    //     })\r\n\r\n    //     if (data.status === 'error') {\r\n    //       throw new Error(data.message)\r\n    //     }\r\n\r\n    //     Toast.fire({\r\n    //       icon: 'success',\r\n    //       title: data.message\r\n    //     })\r\n    //     // 成功登入後轉址到登入頁\r\n    //     this.$router.push('/signin')\r\n    //   } catch (error) {              \r\n    //     Toast.fire({\r\n    //       icon: \"warning\",\r\n    //       title: \"無法註冊 - ${error.message}\",\r\n    //     });        \r\n    //   } \r\n    // },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}