{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport NavTabs from './../components/NavTabs'; // import Spinner from './../components/Spinner'\n\nimport { emptyImageFilter } from './../utils/mixins';\nimport usersAPI from './../apis/users';\nimport { Toast } from './../utils/helpers';\nexport default {\n  name: 'UsersTop',\n  components: {\n    NavTabs\n  },\n  mixins: [emptyImageFilter],\n\n  data() {\n    return {\n      users: []\n    };\n  },\n\n  created() {\n    this.fetchTopUsers();\n  },\n\n  methods: {\n    async fetchTopUsers() {\n      try {\n        const {\n          data\n        } = await usersAPI.getTopUsers();\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        this.users = data.users.map(user => ({\n          id: user.id,\n          name: user.name,\n          image: user.image,\n          followerCount: user.FollowerCount,\n          isFollowed: user.isFollowed\n        }));\n        this.isLoading = false;\n      } catch (error) {\n        console.error(error.message);\n        this.isLoading = false;\n        Toast.fire({\n          icon: 'error',\n          title: '無法取得美食達人，請稍後再試'\n        });\n      }\n    },\n\n    async addFollowing(userId) {\n      try {\n        const {\n          data\n        } = await usersAPI.addFollowing({\n          userId\n        });\n\n        if (data.status !== 'success') {\n          throw new Error(data.message);\n        }\n\n        this.users = this.users.map(user => {\n          if (user.id !== userId) {\n            return user;\n          } else {\n            return { ...user,\n              followerCount: user.followerCount + 1,\n              isFollowed: true\n            };\n          }\n        });\n      } catch (error) {\n        Toast.fire({\n          icon: 'error',\n          title: '無法加入追蹤，請稍後再試'\n        });\n      }\n    },\n\n    async deleteFollowing(userId) {\n      try {\n        const {\n          data\n        } = await usersAPI.deleteFollowing({\n          userId\n        });\n\n        if (data.status !== 'success') {\n          throw new Error(data.message);\n        }\n\n        this.users = this.users.map(user => {\n          if (user.id !== userId) {\n            return user;\n          } else {\n            return { ...user,\n              followerCount: user.followerCount - 1,\n              isFollowed: false\n            };\n          }\n        });\n      } catch (error) {\n        Toast.fire({\n          icon: 'error',\n          title: '無法取消追蹤，請稍後再試'\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAoDA,8C,CACA;;AACA;AACA;AACA;AAEA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,0BALA;;EAMAC;IACA;MACAC;IADA;EAGA,CAVA;;EAWAC;IACA;EACA,CAbA;;EAcAC;IACA;MACA;QACA;UAAAH;QAAA;;QAEA;UACA;QACA;;QAEA;UACAI,WADA;UAEAR,eAFA;UAGAS,iBAHA;UAIAC,iCAJA;UAKAC;QALA;QAOA;MACA,CAfA,CAeA;QACAC;QACA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAzBA;;IA0BA;MACA;QACA;UAAAX;QAAA;UAAAY;QAAA;;QAEA;UACA;QACA;;QAEA;UACA;YACA;UACA,CAFA,MAEA;YACA,SACA,OADA;cAEAN,qCAFA;cAGAC;YAHA;UAKA;QACA,CAVA;MAWA,CAlBA,CAkBA;QACAE;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAnDA;;IAoDA;MACA;QACA;UAAAX;QAAA;UAAAY;QAAA;;QAEA;UACA;QACA;;QAEA;UACA;YACA;UACA,CAFA,MAEA;YACA,SACA,OADA;cAEAN,qCAFA;cAGAC;YAHA;UAKA;QACA,CAVA;MAWA,CAlBA,CAkBA;QACAE;UACAC,aADA;UAEAC;QAFA;MAIA;IACA;;EA7EA;AAdA","names":["name","components","NavTabs","mixins","data","users","created","methods","id","image","followerCount","isFollowed","console","Toast","icon","title","userId"],"sourceRoot":"src/views","sources":["UsersTop.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <NavTabs />\r\n\r\n    <Spinner v-if=\"isLoading\" />\r\n    <template v-else>\r\n      <h1 class=\"mt-5\">\r\n        美食達人\r\n      </h1>\r\n      <hr>\r\n      <div class=\"row text-center\">\r\n        <div\r\n          v-for=\"user in users\"\r\n          :key=\"user.id\"\r\n          class=\"col-3\"\r\n        >\r\n          <router-link :to=\"{ name: 'user', params: { id: user.id } }\">\r\n            <img\r\n              :src=\"user.image | emptyImage\"\r\n              width=\"140px\"\r\n              height=\"140px\"\r\n            >\r\n          </router-link>\r\n          <h2>{{ user.name }}</h2>\r\n          <span\r\n            class=\"badge badge-secondary\"\r\n          >追蹤人數：{{ user.followerCount }}</span>\r\n          <p class=\"mt-3\">\r\n            <button\r\n              v-if=\"user.isFollowed\"\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              @click.stop.prevent=\"deleteFollowing(user.id)\"\r\n            >\r\n              取消追蹤\r\n            </button>\r\n            <button\r\n              v-else\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              @click.stop.prevent=\"addFollowing(user.id)\"\r\n            >\r\n              追蹤\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavTabs from './../components/NavTabs'\r\n// import Spinner from './../components/Spinner'\r\nimport { emptyImageFilter } from './../utils/mixins'\r\nimport usersAPI from './../apis/users'\r\nimport { Toast } from './../utils/helpers'\r\n\r\nexport default {\r\n  name: 'UsersTop',\r\n  components: {\r\n    NavTabs,    \r\n  },\r\n  mixins: [emptyImageFilter],\r\n  data () {\r\n    return {\r\n      users: [],      \r\n    }\r\n  },\r\n  created () {\r\n    this.fetchTopUsers()\r\n  },\r\n  methods: {\r\n    async fetchTopUsers () {\r\n      try {        \r\n        const { data } = await usersAPI.getTopUsers()\r\n\r\n        if (data.status === 'error') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        this.users = data.users.map(user => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          image: user.image,\r\n          followerCount: user.FollowerCount,\r\n          isFollowed: user.isFollowed\r\n        }))\r\n        this.isLoading = false\r\n      } catch (error) {\r\n        console.error(error.message)\r\n        this.isLoading = false\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得美食達人，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    async addFollowing (userId) {\r\n      try {\r\n        const { data } = await usersAPI.addFollowing({ userId })\r\n\r\n        if (data.status !== 'success') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        this.users = this.users.map(user => {\r\n          if (user.id !== userId) {\r\n            return user\r\n          } else {\r\n            return {\r\n              ...user,\r\n              followerCount: user.followerCount + 1,\r\n              isFollowed: true\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法加入追蹤，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    async deleteFollowing (userId) {\r\n      try {\r\n        const { data } = await usersAPI.deleteFollowing({ userId })\r\n\r\n        if (data.status !== 'success') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        this.users = this.users.map(user => {\r\n          if (user.id !== userId) {\r\n            return user\r\n          } else {\r\n            return {\r\n              ...user,\r\n              followerCount: user.followerCount - 1,\r\n              isFollowed: false\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取消追蹤，請稍後再試'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}