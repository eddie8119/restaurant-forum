{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport AdminNav from \"@/components/AdminNav\";\nimport adminAPI from './../apis/admin';\nimport { Toast } from './../utils/helpers';\nimport SpinneR from '@/components/SpinneR';\nexport default {\n  name: \"AdminCategories\",\n  components: {\n    AdminNav,\n    SpinneR\n  },\n\n  data() {\n    return {\n      categories: [],\n      newCategoryName: \"\",\n      isLoading: true,\n      isProcessing: false\n    };\n  },\n\n  created() {\n    this.fetchCategories();\n  },\n\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await adminAPI.categories.get();\n\n        if (response.statusText !== \"OK\") {\n          throw new Error(\"無法載入餐廳分類，請稍後再試\");\n        }\n\n        console.log(response.data.categories);\n        this.categories = response.data.categories.map(category => ({ ...category,\n          isEditing: false,\n          nameCached: \"\"\n        }));\n        this.isLoading = false;\n      } catch (error) {\n        this.isLoading = false;\n        Toast.fire({\n          icon: 'error',\n          title: '無法載入餐廳分類，請稍後再試'\n        });\n      }\n    },\n\n    async createCategory() {\n      try {\n        if (!this.newCategoryName.trim()) {\n          //凡是輸入的起手式 然後記得清空\n          Toast.fire({\n            icon: 'warning',\n            title: '請輸入餐廳類別'\n          });\n          return;\n        }\n\n        this.isProcessing = true;\n        const {\n          data\n        } = await adminAPI.categories.create({\n          name: this.newCategoryName\n        });\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        this.categories.push({\n          id: data.categoryId,\n          //這個最奇怪\n          name: this.newCategoryName,\n          isEditing: false,\n          nameCached: ''\n        });\n        this.newCategoryName = '';\n        this.isProcessing = false;\n      } catch (error) {\n        console.log(error);\n        this.isProcessing = false;\n        this.newCategoryName = '';\n        Toast.fire({\n          icon: 'error',\n          title: '無法新增餐廳分類，請稍後再試'\n        });\n      }\n    },\n\n    async deleteCategory(categoryId) {\n      try {\n        const {\n          data\n        } = await adminAPI.categories.delete({\n          categoryId\n        });\n\n        if (data.status !== 'success') {\n          throw new Error(data.message);\n        }\n\n        this.categories = this.categories.filter(category => category.id !== categoryId);\n        Toast.fire({\n          icon: 'success',\n          title: '成功刪除該餐廳類別'\n        });\n      } catch (error) {\n        console.log(error);\n        Toast.fire({\n          icon: 'error',\n          title: '無法刪除餐廳類別，請稍後再試'\n        });\n      }\n    },\n\n    toggleIsEditing(categoryId) {\n      this.categories = this.categories.map(category => {\n        if (category.id === categoryId) {\n          return { ...category,\n            isEditing: !category.isEditing,\n            nameCached: category.name\n          };\n        } else {\n          return category;\n        }\n      });\n    },\n\n    async updateCategory({\n      categoryId,\n      name\n    }) {\n      this.toggleIsEditing(categoryId);\n    },\n\n    handleCancel(categoryId) {\n      this.categories = this.categories.map(category => {\n        if (category.id === categoryId) {\n          return { ...category,\n            name: category.nameCached\n          };\n        }\n\n        return category;\n      });\n      this.toggleIsEditing(categoryId);\n    } // fetchCategories () {\n    //   this.categories = dummyData.categories.map(category => ({\n    //     ...category,\n    //     isEditing: false,\n    //     nameCached: ''\n    //   }))\n    // },\n    // createCategory () {\n    //   this.categories.push({\n    //     id: uuidv4(),\n    //     name: this.newCategoryName\n    //   })\n    //   this.newCategoryName = ''\n    // },    \n    // deleteCategory (categoryId) {\n    //   this.categories = this.categories.filter(\n    //     category => category.id !== categoryId\n    //   )\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":";AAyFA;AACA;AACA;AACA;AAEA;EACAA,uBADA;EAEAC;IACAC,QADA;IAEAC;EAFA,CAFA;;EAMAC;IACA;MACAC,cADA;MAEAC,mBAFA;MAGAC,eAHA;MAIAC;IAJA;EAMA,CAbA;;EAcAC;IACA;EACA,CAhBA;;EAiBAC;IACA;MACA;QACA;;QAEA;UACA;QACA;;QAEAC;QAEA,8DACA,WADA;UAEAC,gBAFA;UAGAC;QAHA;QAMA;MACA,CAhBA,CAgBA;QACA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAzBA;;IA0BA;MACA;QACA;UAAA;UACAF;YACAC,eADA;YAEAC;UAFA;UAIA;QACA;;QAEA;QAEA;UAAAZ;QAAA;UACAJ;QADA;;QAIA;UACA;QACA;;QAEA;UACAiB,mBADA;UACA;UACAjB,0BAFA;UAGAY,gBAHA;UAIAC;QAJA;QAMA;QACA;MACA,CA3BA,CA2BA;QACAF;QACA;QACA;QACAG;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CA/DA;;IAgEA;MACA;QACA;UAAAZ;QAAA;UAAAc;QAAA;;QACA;UACA;QACA;;QAEA,yCACAC,sCADA;QAGAL;UACAC,eADA;UAEAC;QAFA;MAIA,CAbA,CAaA;QACAL;QACAG;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CArFA;;IAsFAI;MACA;QACA;UACA,SACA,WADA;YAEAR,8BAFA;YAGAC;UAHA;QAKA,CANA,MAMA;UACA;QACA;MACA,CAVA;IAWA,CAlGA;;IAmGA;MAAAK;MAAAlB;IAAA;MACA;IACA,CArGA;;IAsGAqB;MACA;QACA;UACA,SACA,WADA;YAEArB;UAFA;QAIA;;QACA;MACA,CARA;MASA;IACA,CAjHA,CAmHA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EArIA;AAjBA","names":["name","components","AdminNav","SpinneR","data","categories","newCategoryName","isLoading","isProcessing","created","methods","console","isEditing","nameCached","Toast","icon","title","id","categoryId","category","toggleIsEditing","handleCancel"],"sourceRoot":"src/views","sources":["AdminCategories.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <AdminNav />\r\n    <form class=\"my-4\">\r\n      <div class=\"form-row\">\r\n        <div class=\"col-auto\">\r\n          <input\r\n            v-model=\"newCategoryName\"           \r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"新增餐廳類別...\"\r\n          >\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            :disabled=\"isProcessing === true\"\r\n            @click.stop.prevent=\"createCategory\"   \r\n          >\r\n            {{ isProcessing ? \"處理中\" : \"新增\" }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <SpinneR v-if=\"isLoading\" />\r\n    <table v-else class=\"table\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\" width=\"60\">#</th>\r\n          <th scope=\"col\">Category Name</th>\r\n          <th scope=\"col\" width=\"210\">Action</th>\r\n        </tr>\r\n      </thead>      \r\n      <tbody>\r\n        <tr v-for=\"category in categories\" :key=\"category.id\">\r\n          <th scope=\"row\">\r\n            {{ category.id }}\r\n          </th>\r\n          <td class=\"position-relative\">\r\n            <div v-show=\"!category.isEditing\" class=\"category-name\">\r\n              {{ category.name }}\r\n            </div>\r\n            <input\r\n              v-show=\"category.isEditing\"\r\n              v-model=\"category.name\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n            >\r\n            <span\r\n              v-show=\"category.isEditing\"\r\n              class=\"cancel\"\r\n              @click=\"handleCancel(category.id)\"\r\n            >\r\n              ✕\r\n            </span>\r\n          </td>\r\n          <td class=\"d-flex justify-content-between\">\r\n            <button \r\n              v-show=\"!category.isEditing\" \r\n              @click.stop.prevent=\"toggleIsEditing(category.id)\"\r\n              type=\"button\" \r\n              class=\"btn btn-link mr-2\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              v-show=\"category.isEditing\"\r\n              type=\"button\"\r\n              class=\"btn btn-link mr-2\"\r\n              @click.stop.prevent=\"updateCategory({ categoryId: category.id, name: category.name })\"\r\n            >\r\n              Save\r\n            </button> \r\n            <button\r\n              @click.stop.prevent=\"deleteCategory(category.id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-link mr-2\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AdminNav from \"@/components/AdminNav\"\r\nimport adminAPI from './../apis/admin'\r\nimport {Toast} from './../utils/helpers'\r\nimport SpinneR from '@/components/SpinneR'\r\n\r\nexport default {\r\n  name: \"AdminCategories\",\r\n  components: {\r\n    AdminNav,\r\n    SpinneR\r\n  },  \r\n  data() {\r\n    return {      \r\n      categories: [],\r\n      newCategoryName: \"\",\r\n      isLoading: true,      \r\n      isProcessing: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchCategories();\r\n  },\r\n  methods:{\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await adminAPI.categories.get()\r\n        \r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error(\"無法載入餐廳分類，請稍後再試\");\r\n        }\r\n\r\n        console.log(response.data.categories)\r\n\r\n        this.categories = response.data.categories.map(category => ({\r\n          ...category,\r\n          isEditing: false,\r\n          nameCached: \"\",          \r\n        }))\r\n\r\n        this.isLoading = false\r\n      } catch(error) {   \r\n        this.isLoading = false    \r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法載入餐廳分類，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    async createCategory() {\r\n      try {\r\n        if (!this.newCategoryName.trim()) { //凡是輸入的起手式 然後記得清空\r\n          Toast.fire({\r\n            icon: 'warning',\r\n            title: '請輸入餐廳類別'\r\n          })\r\n          return\r\n        }\r\n\r\n        this.isProcessing = true        \r\n        \r\n        const {data} = await adminAPI.categories.create({\r\n          name: this.newCategoryName\r\n        })\r\n        \r\n        if (data.status === 'error') {         \r\n          throw new Error(data.message);\r\n        }\r\n        \r\n        this.categories.push({          \r\n          id: data.categoryId, //這個最奇怪\r\n          name: this.newCategoryName,\r\n          isEditing: false,\r\n          nameCached: ''\r\n        })\r\n        this.newCategoryName = ''\r\n        this.isProcessing = false\r\n      } catch(error) {   \r\n        console.log(error);\r\n        this.isProcessing = false\r\n        this.newCategoryName = ''    \r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法新增餐廳分類，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    async deleteCategory (categoryId) {\r\n      try {\r\n        const { data } = await adminAPI.categories.delete({categoryId})\r\n        if (data.status !== 'success') {\r\n          throw new Error(data.message)\r\n        }\r\n        \r\n        this.categories = this.categories.filter (\r\n            category => category.id !== categoryId\r\n        )\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: '成功刪除該餐廳類別'\r\n        })\r\n      } catch (error) {\r\n        console.log(error)\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法刪除餐廳類別，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    toggleIsEditing(categoryId) {\r\n      this.categories = this.categories.map(category => {\r\n        if(category.id === categoryId) {\r\n          return {\r\n            ...category,\r\n            isEditing: !category.isEditing,\r\n            nameCached: category.name\r\n          }\r\n        } else {\r\n          return category\r\n        }\r\n      })\r\n    },\r\n    async updateCategory({categoryId, name}) {\r\n      this.toggleIsEditing(categoryId)\r\n    },\r\n    handleCancel(categoryId) {\r\n      this.categories = this.categories.map(category => {\r\n        if (category.id === categoryId) {\r\n          return {\r\n            ...category,\r\n            name: category.nameCached\r\n          }\r\n        }\r\n        return category\r\n      })\r\n      this.toggleIsEditing(categoryId)\r\n    },\r\n\r\n    // fetchCategories () {\r\n    //   this.categories = dummyData.categories.map(category => ({\r\n    //     ...category,\r\n    //     isEditing: false,\r\n    //     nameCached: ''\r\n    //   }))\r\n    // },\r\n    // createCategory () {\r\n    //   this.categories.push({\r\n    //     id: uuidv4(),\r\n    //     name: this.newCategoryName\r\n    //   })\r\n    //   this.newCategoryName = ''\r\n    // },    \r\n    // deleteCategory (categoryId) {\r\n    //   this.categories = this.categories.filter(\r\n    //     category => category.id !== categoryId\r\n    //   )\r\n    // }\r\n  } \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .category-name {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid transparent;\r\n    outline: 0;\r\n    cursor: auto;\r\n  }\r\n  \r\n  .btn-link {\r\n    width: 62px;\r\n  }\r\n  \r\n  .cancel {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 25px;\r\n    height: 25px;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 50%;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module"}