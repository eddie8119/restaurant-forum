{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport adminAPI from './../apis/admin';\nimport { Toast } from './../utils/helpers';\nimport SpinneR from './../';\nexport default {\n  data() {\n    return {\n      restaurants: [],\n      isProcessing: false\n    };\n  },\n\n  created() {\n    this.fetchRestaurants();\n  },\n\n  methods: {\n    async fetchRestaurants() {\n      try {\n        this.isLoading = true;\n        const response = await adminAPI.restaurants.get();\n\n        if (response.statusText !== \"OK\") {\n          throw new Error(\"無法顯示餐廳，請稍後再試\");\n        }\n\n        this.restaurants = response.data.restaurants;\n        this.isLoading = false;\n      } catch (error) {\n        this.isLoading = false;\n        console.log(error);\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法取得餐廳清單，請稍後再試\"\n        });\n      }\n    },\n\n    async deleteRestaurant(restaurantId) {\n      try {\n        this.isProcessing = true;\n        const {\n          data\n        } = await adminAPI.restaurants.delete({\n          restaurantId\n        });\n\n        if (data.status !== 'success') {\n          throw new Error(data.message);\n        }\n\n        this.restaurants = this.restaurants.filter(restaurant => restaurant.id !== restaurantId);\n        this.isProcessing = false;\n        Toast.fire({\n          icon: 'success',\n          title: \"刪除餐廳成功\"\n        });\n      } catch (error) {\n        this.isProcessing = false;\n        console.log(error);\n        Toast.fire({\n          icon: 'error',\n          title: \"無法取得餐廳清單，請稍後再試\"\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAgDA;AACA;AACA;AAEA;EACAA;IACA;MACAC,eADA;MAEAC;IAFA;EAIA,CANA;;EAOAC;IACA;EACA,CATA;;EAUAC;IACA;MACA;QACA;QACA;;QAEA;UACA;QACA;;QACA;QACA;MACA,CATA,CASA;QACA;QACAC;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAnBA;;IAoBA;MACA;QACA;QACA;UAAAR;QAAA;UAAAS;QAAA;;QAEA;UACA;QACA;;QAEA,2CACAC,4CADA;QAIA;QACAJ;UACAC,eADA;UAEAC;QAFA;MAIA,CAjBA,CAiBA;QACA;QACAH;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA;;EA9CA;AAVA","names":["data","restaurants","isProcessing","created","methods","console","Toast","icon","title","restaurantId","restaurant"],"sourceRoot":"src/components","sources":["AdminRestaurantsTable.vue"],"sourcesContent":["<template>\r\n  <table class=\"table\">\r\n    <thead class=\"thead-dark\">\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Category</th>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\" width=\"300\">操作</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"restaurant in restaurants\" :key=\"restaurant.id\">\r\n        <th scope=\"row\">\r\n          {{ restaurant.id }}\r\n        </th>\r\n        <td>{{ restaurant.Category ? restaurant.Category.name : \"未分類\" }}</td>\r\n        <td>{{ restaurant.name }}</td>\r\n        <td class=\"d-flex justify-content-between\">\r\n          <router-link\r\n            :to=\"{ name: 'admin-restaurant', params: { id: restaurant.id } }\"\r\n            class=\"btn btn-link\"\r\n            >Show</router-link\r\n          >\r\n\r\n          <router-link\r\n            :to=\"{\r\n              name: 'admin-restaurant-edit',\r\n              params: { id: restaurant.id }\r\n            }\"\r\n            class=\"btn btn-link\"\r\n            >Edit</router-link\r\n          >\r\n\r\n          <button\r\n            @click.stop.prevent=\"deleteRestaurant(restaurant.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-link\"\r\n            :disabled=\"isProcessing === true\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport adminAPI from './../apis/admin'\r\nimport {Toast} from './../utils/helpers'\r\nimport SpinneR from './../'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      restaurants: [],\r\n      isProcessing: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchRestaurants()\r\n  },\r\n  methods: {\r\n    async fetchRestaurants() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await adminAPI.restaurants.get()\r\n        \r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error(\"無法顯示餐廳，請稍後再試\")\r\n        }\r\n        this.restaurants = response.data.restaurants\r\n        this.isLoading = false\r\n      } catch(error) {\r\n        this.isLoading = false\r\n        console.log(error)\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法取得餐廳清單，請稍後再試\"\r\n      });\r\n      }      \r\n    },\r\n    async deleteRestaurant(restaurantId) {\r\n      try {\r\n        this.isProcessing = true\r\n        const {data} = await adminAPI.restaurants.delete({restaurantId})\r\n\r\n        if(data.status !== 'success') {\r\n            throw new Error(data.message)\r\n        }\r\n\r\n        this.restaurants = this.restaurants.filter (\r\n            restaurant => restaurant.id !== restaurantId\r\n        )\r\n\r\n        this.isProcessing = false\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: \"刪除餐廳成功\"\r\n        })\r\n      } catch(error) {\r\n        this.isProcessing = false \r\n        console.log(error)\r\n        Toast.fire({\r\n        icon: 'error',\r\n        title: \"無法取得餐廳清單，請稍後再試\",\r\n      });\r\n      } \r\n    },   \r\n  }\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}