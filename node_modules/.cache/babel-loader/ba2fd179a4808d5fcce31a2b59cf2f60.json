{"ast":null,"code":"import RestaurantDetail from \"../components/RestaurantDetail.vue\";\nimport RestaurantComments from \"../components/RestaurantComments.vue\";\nimport CreateComment from \"../components/CreateComment.vue\";\nimport restaurantsAPI from './../apis/restaurants';\nimport { Toast } from './../utils/helpers';\nexport default {\n  name: \"RestauranT\",\n  components: {\n    RestaurantDetail,\n    RestaurantComments,\n    CreateComment\n  },\n\n  data() {\n    return {\n      restaurant: {\n        id: -1,\n        name: \"\",\n        categoryName: \"\",\n        image: \"\",\n        openingHours: \"\",\n        tel: \"\",\n        address: \"\",\n        description: \"\",\n        isFavorited: false,\n        isLiked: false\n      },\n      restaurantComments: [],\n      currentUser: dummyUser.currentUser\n    };\n  },\n\n  created() {\n    const {\n      id\n    } = this.$route.params;\n    this.fetchRestaurant(id);\n  },\n\n  methods: {\n    async fetchRestaurant(restaurantId) {\n      try {\n        const {\n          data\n        } = await restaurantsAPI.getRestaurant({\n          restaurantId\n        });\n        const {\n          restaurant,\n          isFavorited,\n          isLiked\n        } = data;\n        const {\n          id,\n          name,\n          Category,\n          image,\n          opening_hours: openingHours,\n          tel,\n          address,\n          description,\n          Comments\n        } = restaurant;\n        this.restaurant = {\n          id,\n          name,\n          categoryName: Category ? Category.name : '未分類',\n          image,\n          openingHours,\n          tel,\n          address,\n          description,\n          isFavorited,\n          isLiked\n        };\n        this.restaurantComments = Comments;\n      } catch (error) {\n        // STEP 6: 透過 restaurantsAPI 取得餐廳資訊\n        Toast.fire({\n          icon: 'error',\n          title: '無法取得餐廳資料，請稍後再試'\n        });\n      }\n\n      this.restaurantComments = restaurant.Comments;\n    },\n\n    afterDeleteComment(commentId) {\n      this.restaurantComments = this.restaurantComments.filter(comment => comment.id !== commentId);\n    },\n\n    afterCreateComment(payload) {\n      const {\n        commentId,\n        restaurantId,\n        text\n      } = payload;\n      this.restaurantComments.push({\n        id: commentId,\n        RestaurantId: restaurantId,\n        User: {\n          id: this.currentUser.id,\n          name: this.currentUser.name\n        },\n        text,\n        createdAt: new Date()\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoBA;AACA;AACA;AACA;AACA;AAEA;EACAA,kBADA;EAEAC;IACAC,gBADA;IAEAC,kBAFA;IAGAC;EAHA,CAFA;;EAOAC;IACA;MACAC;QACAC,MADA;QAEAP,QAFA;QAGAQ,gBAHA;QAIAC,SAJA;QAKAC,gBALA;QAMAC,OANA;QAOAC,WAPA;QAQAC,eARA;QASAC,kBATA;QAUAC;MAVA,CADA;MAaAC,sBAbA;MAcAC;IAdA;EAgBA,CAxBA;;EAyBAC;IACA;MAAAX;IAAA;IACA;EACA,CA5BA;;EA6BAY;IACA;MACA;QACA;UAAAd;QAAA;UAAAe;QAAA;QACA;UAAAd;UAAAQ;UAAAC;QAAA;QACA;UACAR,EADA;UAEAP,IAFA;UAGAqB,QAHA;UAIAZ,KAJA;UAKAa,2BALA;UAMAX,GANA;UAOAC,OAPA;UAQAC,WARA;UASAU;QATA,IAUAjB,UAVA;QAYA;UACAC,EADA;UAEAP,IAFA;UAGAQ,8CAHA;UAIAC,KAJA;UAKAC,YALA;UAMAC,GANA;UAOAC,OAPA;UAQAC,WARA;UASAC,WATA;UAUAC;QAVA;QAaA;MACA,CA7BA,CA6BA;QACA;QACAS;UACAC,aADA;UAEAC;QAFA;MAIA;;MAEA;IACA,CAxCA;;IAyCAC;MACA,yDACAC,mCADA;IAGA,CA7CA;;IA8CAC;MACA;QAAAC;QAAAV;QAAAW;MAAA;MACA;QACAxB,aADA;QAEAyB,0BAFA;QAGAC;UACA1B,uBADA;UAEAP;QAFA,CAHA;QAOA+B,IAPA;QAQAG;MARA;IAUA;;EA1DA;AA7BA","names":["name","components","RestaurantDetail","RestaurantComments","CreateComment","data","restaurant","id","categoryName","image","openingHours","tel","address","description","isFavorited","isLiked","restaurantComments","currentUser","created","methods","restaurantId","Category","opening_hours","Comments","Toast","icon","title","afterDeleteComment","comment","afterCreateComment","commentId","text","RestaurantId","User","createdAt"],"sourceRoot":"src/views","sources":["RestauranT.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <h1>餐廳描述頁</h1>\r\n    <!-- 餐廳資訊頁 RestaurantDetail -->\r\n    <RestaurantDetail :initial-restaurant=\"restaurant\" />\r\n    <hr />\r\n    <!-- 餐廳評論 RestaurantComments -->\r\n    <RestaurantComments\r\n      :restaurant-comments=\"restaurantComments\"\r\n      @after-delete-comment=\"afterDeleteComment\"\r\n    />\r\n    <!-- 新增評論 CreateComment -->\r\n    <CreateComment\r\n      :restaurant-id=\"restaurant.id\"\r\n      @after-create-comment=\"afterCreateComment\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RestaurantDetail from \"../components/RestaurantDetail.vue\";\r\nimport RestaurantComments from \"../components/RestaurantComments.vue\";\r\nimport CreateComment from \"../components/CreateComment.vue\";\r\nimport restaurantsAPI from './../apis/restaurants'\r\nimport { Toast } from './../utils/helpers'\r\n\r\nexport default {\r\n  name:\"RestauranT\",\r\n  components: {    \r\n    RestaurantDetail,\r\n    RestaurantComments,\r\n    CreateComment,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurant: {\r\n        id: -1,\r\n        name: \"\",\r\n        categoryName: \"\",\r\n        image: \"\",\r\n        openingHours: \"\",\r\n        tel: \"\",\r\n        address: \"\",\r\n        description: \"\",\r\n        isFavorited: false,\r\n        isLiked: false,\r\n      },\r\n      restaurantComments: [],\r\n      currentUser: dummyUser.currentUser,\r\n    };\r\n  },\r\n  created() {\r\n    const { id } = this.$route.params;\r\n    this.fetchRestaurant(id);\r\n  },\r\n  methods: {\r\n    async fetchRestaurant(restaurantId) {\r\n      try {\r\n        const {data} = await restaurantsAPI.getRestaurant({ restaurantId })\r\n        const { restaurant, isFavorited, isLiked } = data;\r\n        const {\r\n          id,\r\n          name,\r\n          Category,\r\n          image,\r\n          opening_hours: openingHours,\r\n          tel,\r\n          address,\r\n          description,\r\n          Comments\r\n        } = restaurant\r\n\r\n        this.restaurant = {\r\n          id,\r\n          name,\r\n          categoryName: Category ? Category.name : '未分類',\r\n          image,\r\n          openingHours,\r\n          tel,\r\n          address,\r\n          description,\r\n          isFavorited,\r\n          isLiked,\r\n        };\r\n\r\n        this.restaurantComments = Comments\r\n      }  catch (error) {\r\n        // STEP 6: 透過 restaurantsAPI 取得餐廳資訊\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得餐廳資料，請稍後再試'\r\n        })\r\n      }          \r\n\r\n      this.restaurantComments = restaurant.Comments;\r\n    },\r\n    afterDeleteComment(commentId) {\r\n      this.restaurantComments = this.restaurantComments.filter(\r\n        (comment) => comment.id !== commentId\r\n      );\r\n    },\r\n    afterCreateComment(payload) {\r\n      const { commentId, restaurantId, text } = payload;\r\n      this.restaurantComments.push({\r\n        id: commentId,\r\n        RestaurantId: restaurantId,\r\n        User: {\r\n          id: this.currentUser.id,\r\n          name: this.currentUser.name,\r\n        },\r\n        text,\r\n        createdAt: new Date(),\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}