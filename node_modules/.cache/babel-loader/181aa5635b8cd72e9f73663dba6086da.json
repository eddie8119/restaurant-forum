{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport NavTabs from \"../components/NavTabs.vue\";\nimport usersAPI from \"./../apis/users\";\nimport { Toast } from \"./../utils/helpers\";\nimport { emptyImageFilter } from './../utils/mixins';\nexport default {\n  components: {\n    NavTabs\n  },\n  mixins: [emptyImageFilter],\n\n  data() {\n    return {\n      users: []\n    };\n  },\n\n  created() {\n    this.fetchTopUsers();\n  },\n\n  methods: {\n    async fetchTopUsers() {\n      try {\n        const {\n          data\n        } = await usersAPI.getTopUsers();\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        this.users = data.users.map(user => ({\n          id: user.id,\n          name: user.name,\n          image: user.image,\n          followerCount: user.FollowerCount,\n          isFollowed: user.isFollowed\n        }));\n      } catch (error) {\n        console.log(error.message);\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法取得美食達人，請稍後再試\"\n        });\n      }\n    },\n\n    async addFollowing(userId) {\n      try {\n        const response = await usersAPI.addFollowing({\n          userId\n        });\n        console.log('data', response); // if (data.status  !== 'success') {\n        //   throw new Error(data.message);\n        // }\n        // this.users = this.users.map( user => {\n        //   if (user.id !== userId) {\n        //     return user\n        //   } else {\n        //     return {\n        //       ...user, \n        //       followerCount: user.followerCount + 1,\n        //       isFollowed: true,\n        //     }\n        //   }\n        // }) \n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法加入追蹤，請稍後再試\"\n        });\n      }\n    },\n\n    async deleteFollowing(userId) {\n      try {\n        const {\n          data\n        } = await usersAPI.deleteFollowing({\n          userId\n        });\n        const response = await usersAPI.deleteFollowing({\n          userId\n        });\n        console.log('data', response); // if (data.status !== \"success\") {\n        //   throw new Error(data.message);\n        // }\n        //多複習此處\n        // this.users = this.users.map(user => {\n        //   if (user.id !== userId) {\n        //     return user;\n        //   } else {\n        //     return {\n        //       ...user,\n        //       followerCount: user.followerCount - 1,\n        //       isFollowed: false,\n        //     }\n        //   }    \n        // })              \n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法移除追蹤，請稍後再試\"\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAsCA;AACA;AACA;AACA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,0BAJA;;EAKAC;IACA;MACAC;IADA;EAGA,CATA;;EAUAC;IACA;EACA,CAZA;;EAaAC;IACA;MACA;QACA;UAAAH;QAAA;;QAEA;UACA;QACA;;QAEA;UACAI,WADA;UAEAC,eAFA;UAGAC,iBAHA;UAIAC,iCAJA;UAKAC;QALA;MAOA,CAdA,CAcA;QACAC;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAvBA;;IAwBA;MACA;QACA;UAAAC;QAAA;QACAJ,8BAFA,CAGA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,CAlBA,CAkBA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAjDA;;IAkDA;MACA;QACA;UAAAZ;QAAA;UAAAa;QAAA;QACA;UAAAA;QAAA;QACAJ,8BAHA,CAKA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,CArBA,CAqBA;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA;;EA9EA;AAbA","names":["components","NavTabs","mixins","data","users","created","methods","id","name","image","followerCount","isFollowed","console","Toast","icon","title","userId"],"sourceRoot":"src/views","sources":["UsersTop.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <NavTabs />\r\n    <h1 class=\"mt-5\">美食達人</h1>\r\n    <hr />\r\n    <div class=\"row text-center\">      \r\n      <div v-for=\"user in users\" :key=\"user.id\" class=\"col-3\">\r\n        <router-link :to=\"{ name: 'user', params: { id: user.id }  }\">\r\n          <img :src=\"user.image | emptyImage\" width=\"140px\" height=\"140px\" />\r\n        </router-link>\r\n        <h2>{{ user.name }}</h2>\r\n        <span class=\"badge badge-secondary\"\r\n          >追蹤人數：{{ user.followerCount }}</span          \r\n        >\r\n        <p class=\"mt-3\">\r\n          <button\r\n            v-if=\"user.isFollowed\"\r\n            @click.stop.prevent=\"deleteFollowing(user.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger\"\r\n          >\r\n            取消追蹤\r\n          </button>\r\n          <button\r\n            v-else\r\n            @click.stop.prevent=\"addFollowing(user.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n          >\r\n            追蹤\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavTabs from \"../components/NavTabs.vue\";\r\nimport usersAPI from \"./../apis/users\";\r\nimport { Toast } from \"./../utils/helpers\";\r\nimport { emptyImageFilter } from './../utils/mixins'\r\n\r\nexport default {\r\n  components: {\r\n    NavTabs,    \r\n  },\r\n  mixins: [emptyImageFilter],\r\n  data() {\r\n    return {\r\n      users: [],\r\n    };    \r\n  },\r\n  created() {\r\n    this.fetchTopUsers();\r\n  },\r\n  methods: {\r\n    async fetchTopUsers() {\r\n      try {\r\n        const { data } = await usersAPI.getTopUsers();  \r\n             \r\n        if (data.status === 'error') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        this.users = data.users.map(user => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          image: user.image,          \r\n          followerCount: user.FollowerCount,\r\n          isFollowed: user.isFollowed,\r\n        }))\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法取得美食達人，請稍後再試\",\r\n        });\r\n      }\r\n    },  \r\n    async addFollowing(userId) {\r\n      try {\r\n        const response = await usersAPI.addFollowing({ userId })\r\n        console.log('data', response)\r\n        // if (data.status  !== 'success') {\r\n        //   throw new Error(data.message);\r\n        // }\r\n\r\n        // this.users = this.users.map( user => {\r\n        //   if (user.id !== userId) {\r\n        //     return user\r\n        //   } else {\r\n        //     return {\r\n        //       ...user, \r\n        //       followerCount: user.followerCount + 1,\r\n        //       isFollowed: true,\r\n        //     }\r\n        //   }\r\n        // }) \r\n      } catch(error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法加入追蹤，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n    async deleteFollowing(userId) {\r\n      try {\r\n        const { data } = await usersAPI.deleteFollowing({userId});\r\n        const response = await usersAPI.deleteFollowing({userId});\r\n        console.log('data', response)\r\n\r\n        // if (data.status !== \"success\") {\r\n        //   throw new Error(data.message);\r\n        // }\r\n\r\n        //多複習此處\r\n        // this.users = this.users.map(user => {\r\n        //   if (user.id !== userId) {\r\n        //     return user;\r\n        //   } else {\r\n        //     return {\r\n        //       ...user,\r\n        //       followerCount: user.followerCount - 1,\r\n        //       isFollowed: false,\r\n        //     }\r\n        //   }    \r\n        // })              \r\n      } catch(error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: \"無法移除追蹤，請稍後再試\",\r\n        });\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}