{"ast":null,"code":"import AdminNav from \"@/components/AdminNav\"; // import adminAPI from './../apis/admin'\n// import {Toast} from './../utils/helpers'\n\nconst dummyData = {\n  categories: [{\n    id: 1,\n    name: '中式料理',\n    createdAt: '2019-06-22T09:00:43.000Z',\n    updatedAt: '2019-06-22T09:00:43.000Z'\n  }, {\n    id: 2,\n    name: '日本料理',\n    createdAt: '2019-06-22T09:00:43.000Z',\n    updatedAt: '2019-06-22T09:00:43.000Z'\n  }, {\n    id: 3,\n    name: '義大利料理',\n    createdAt: '2019-06-22T09:00:43.000Z',\n    updatedAt: '2019-06-22T09:00:43.000Z'\n  }, {\n    id: 4,\n    name: '墨西哥料理',\n    createdAt: '2019-06-22T09:00:43.000Z',\n    updatedAt: '2019-06-22T09:00:43.000Z'\n  }]\n};\nexport default {\n  name: \"AdminCategories\",\n  components: {\n    AdminNav\n  },\n\n  data() {\n    return {\n      categories: [],\n      newCategoryName: \"\",\n      isProcessing: false\n    };\n  },\n\n  created() {\n    this.fetchCategories();\n  },\n\n  methods: {\n    fetchCategories() {\n      this.categories = dummyData.categories;\n    } // async fetchCategories() {\n    // try {\n    //   const {data} = await adminAPI.categories.get()\n    //   this.categories = data.categories\n    // } catch (error) {\n    //   Toast.fire({\n    //     icon: \"error\",\n    //     title: \"無法取得人氣餐廳資料，請稍後再試\",\n    //   });\n    //   }\n    // },\n    // async creatCategory () {\n    //   try {\n    //     const { data } = await adminAPI.categories.creat({\n    //       name: this.newCategoryName\n    //     })\n    //     if (data.status === 'error') {\n    //       throw new Error(data.message)\n    //     }\n    //     this.categories.push({\n    //       id:data.categoryId, //\n    //       name:this.newCategoryName,\n    //     })  \n    //     this.newCategoryName = '' \n    //   } catch (error) {\n    //     console.error(error.message)\n    //     Toast.fire({\n    //       icon: 'error',\n    //       title: '無法刪除該餐廳類別，請稍後再試'\n    //     })\n    //   }\n    // },\n    // async deleteCategory (categoryId) {\n    //   try {\n    //     const { data } = await adminAPI.categories.delete({ categoryId })\n    //     if (data.status === 'error') {\n    //       throw new Error(data.message)\n    //     }\n    //     this.categories = this.categories.filter(\n    //       category => category.id !== categoryId\n    //     )\n    //     Toast.fire({\n    //       icon: 'success',\n    //       title: '成功刪除該餐廳類別'\n    //     })\n    //   } catch (error) {\n    //     console.error(error.message)\n    //     Toast.fire({\n    //       icon: 'error',\n    //       title: '無法刪除該餐廳類別，請稍後再試'\n    //     })\n    //   }\n    // }, \n    // async updateCategory ({categoryId, name}) {\n    //   try {\n    //     const { data } = await adminAPI.categories.update({\n    //       categoryId,\n    //       name\n    //     })\n    //     if (data.status === 'error') {\n    //       throw new Error(data.message)\n    //     }\n    //     this.toggleIsEditing(categoryId)//\n    //   } catch (error) {\n    //     console.error(error.message)\n    //     Toast.fire({\n    //       icon: 'error',\n    //       title: '無法更新餐廳類別，請稍後再試'\n    //     })\n    //   }\n    // },\n    // toggleIsEditing(categoryId) {\n    //   this.categories = this.categories.map(category => {\n    //   })\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":"AA2DA,6C,CACA;AACA;;AACA;EACAA,aACA;IACAC,KADA;IAEAC,YAFA;IAGAC,qCAHA;IAIAC;EAJA,CADA,EAOA;IACAH,KADA;IAEAC,YAFA;IAGAC,qCAHA;IAIAC;EAJA,CAPA,EAaA;IACAH,KADA;IAEAC,aAFA;IAGAC,qCAHA;IAIAC;EAJA,CAbA,EAmBA;IACAH,KADA;IAEAC,aAFA;IAGAC,qCAHA;IAIAC;EAJA,CAnBA;AADA;AA4BA;EACAF,uBADA;EAEAG;IACAC;EADA,CAFA;;EAKAC;IACA;MACAP,cADA;MAEAQ,mBAFA;MAGAC;IAHA;EAKA,CAXA;;EAYAC;IACA;EACA,CAdA;;EAeAC;IACAC;MACA;IACA,CAHA,CAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;;;EArFA;AAfA","names":["categories","id","name","createdAt","updatedAt","components","AdminNav","data","newCategoryName","isProcessing","created","methods","fetchCategories"],"sourceRoot":"src/views","sources":["AdminCategories.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <AdminNav />\r\n    <form class=\"my-4\">\r\n      <div class=\"form-row\">\r\n        <div class=\"col-auto\">\r\n          <input\r\n            v-model=\"newCategoryName\"           \r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"新增餐廳類別...\"\r\n          >\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            @click.stop.prevent=\"creatCategory\"        \r\n          >\r\n            新增\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <table class=\"table\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\" width=\"60\">#</th>\r\n          <th scope=\"col\">Category Name</th>\r\n          <th scope=\"col\" width=\"210\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"category in categories\" :key=\"category.id\">\r\n          <th scope=\"row\">\r\n            {{ category.id }}\r\n          </th>\r\n          <td class=\"position-relative\">\r\n            <div class=\"category-name\">\r\n              {{ category.name }}\r\n            </div>\r\n          </td>\r\n          <td class=\"d-flex justify-content-between\">\r\n            <button type=\"button\" class=\"btn btn-link mr-2\">Edit</button>\r\n            <button\r\n              @click.stop.prevent=\"deleteCategory(category.id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-link mr-2\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AdminNav from \"@/components/AdminNav\";\r\n// import adminAPI from './../apis/admin'\r\n// import {Toast} from './../utils/helpers'\r\nconst dummyData = {\r\n  categories: [\r\n    {\r\n      id: 1,\r\n      name: '中式料理',\r\n      createdAt: '2019-06-22T09:00:43.000Z',\r\n      updatedAt: '2019-06-22T09:00:43.000Z'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '日本料理',\r\n      createdAt: '2019-06-22T09:00:43.000Z',\r\n      updatedAt: '2019-06-22T09:00:43.000Z'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '義大利料理',\r\n      createdAt: '2019-06-22T09:00:43.000Z',\r\n      updatedAt: '2019-06-22T09:00:43.000Z'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '墨西哥料理',\r\n      createdAt: '2019-06-22T09:00:43.000Z',\r\n      updatedAt: '2019-06-22T09:00:43.000Z'\r\n    }\r\n  ]\r\n}\r\nexport default {\r\n  name: \"AdminCategories\",\r\n  components: {\r\n    AdminNav,\r\n  },  \r\n  data() {\r\n    return {      \r\n      categories: [],\r\n      newCategoryName: \"\",\r\n      isProcessing: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchCategories();\r\n  },\r\n  methods:{\r\n    fetchCategories () {\r\n      this.categories = dummyData.categories\r\n    }\r\n    // async fetchCategories() {\r\n    // try {\r\n    //   const {data} = await adminAPI.categories.get()\r\n    //   this.categories = data.categories\r\n    // } catch (error) {\r\n    //   Toast.fire({\r\n    //     icon: \"error\",\r\n    //     title: \"無法取得人氣餐廳資料，請稍後再試\",\r\n    //   });\r\n    //   }\r\n    // },\r\n    // async creatCategory () {\r\n    //   try {\r\n    //     const { data } = await adminAPI.categories.creat({\r\n    //       name: this.newCategoryName\r\n    //     })\r\n\r\n    //     if (data.status === 'error') {\r\n    //       throw new Error(data.message)\r\n    //     }\r\n\r\n    //     this.categories.push({\r\n    //       id:data.categoryId, //\r\n    //       name:this.newCategoryName,\r\n    //     })  \r\n\r\n    //     this.newCategoryName = '' \r\n    //   } catch (error) {\r\n    //     console.error(error.message)\r\n    //     Toast.fire({\r\n    //       icon: 'error',\r\n    //       title: '無法刪除該餐廳類別，請稍後再試'\r\n    //     })\r\n    //   }\r\n    // },\r\n    // async deleteCategory (categoryId) {\r\n    //   try {\r\n    //     const { data } = await adminAPI.categories.delete({ categoryId })\r\n        \r\n    //     if (data.status === 'error') {\r\n    //       throw new Error(data.message)\r\n    //     }\r\n    //     this.categories = this.categories.filter(\r\n    //       category => category.id !== categoryId\r\n    //     )\r\n    //     Toast.fire({\r\n    //       icon: 'success',\r\n    //       title: '成功刪除該餐廳類別'\r\n    //     })\r\n    //   } catch (error) {\r\n    //     console.error(error.message)\r\n    //     Toast.fire({\r\n    //       icon: 'error',\r\n    //       title: '無法刪除該餐廳類別，請稍後再試'\r\n    //     })\r\n    //   }\r\n    // }, \r\n    // async updateCategory ({categoryId, name}) {\r\n    //   try {\r\n    //     const { data } = await adminAPI.categories.update({\r\n    //       categoryId,\r\n    //       name\r\n    //     })\r\n\r\n    //     if (data.status === 'error') {\r\n    //       throw new Error(data.message)\r\n    //     }\r\n\r\n    //     this.toggleIsEditing(categoryId)//\r\n    //   } catch (error) {\r\n    //     console.error(error.message)\r\n    //     Toast.fire({\r\n    //       icon: 'error',\r\n    //       title: '無法更新餐廳類別，請稍後再試'\r\n    //     })\r\n    //   }\r\n    // },\r\n    // toggleIsEditing(categoryId) {\r\n    //   this.categories = this.categories.map(category => {\r\n\r\n    //   })\r\n    // }\r\n      \r\n  } \r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}