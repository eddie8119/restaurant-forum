{"ast":null,"code":"import RestaurantDetail from \"../components/RestaurantDetail.vue\";\nimport RestaurantComments from \"../components/RestaurantComments.vue\";\nimport CreateComment from \"../components/CreateComment.vue\"; // import restaurantsAPI from './../apis/restaurants'\n// import { Toast } from './../utils/helpers'\n// import { mapState } from \"vuex\";\n\nconst dummyData = {\n  \"restaurant\": {\n    \"id\": 1,\n    \"name\": \"Judy Runte\",\n    \"tel\": \"(918) 827-1962\",\n    \"address\": \"98138 Elisa Road\",\n    \"opening_hours\": \"08:00\",\n    \"description\": \"dicta et cupiditate\",\n    \"image\": \"https://loremflickr.com/320/240/food,dessert,restaurant/?random=1\",\n    \"createdAt\": \"2019-06-22T09:00:43.000Z\",\n    \"updatedAt\": \"2019-06-22T09:00:43.000Z\",\n    \"CategoryId\": 3,\n    \"Category\": {\n      \"id\": 3,\n      \"name\": \"義大利料理\",\n      \"createdAt\": \"2019-06-22T09:00:43.000Z\",\n      \"updatedAt\": \"2019-06-22T09:00:43.000Z\"\n    },\n    \"FavoritedUsers\": [],\n    \"LikedUsers\": [],\n    \"Comments\": [{\n      \"id\": 3,\n      \"text\": \"Quos asperiores in nostrum cupiditate excepturi aspernatur.\",\n      \"UserId\": 2,\n      \"RestaurantId\": 1,\n      \"createdAt\": \"2019-06-22T09:00:43.000Z\",\n      \"updatedAt\": \"2019-06-22T09:00:43.000Z\",\n      \"User\": {\n        \"id\": 2,\n        \"name\": \"user1\",\n        \"email\": \"user1@example.com\",\n        \"password\": \"$2a$10$0ISHJI48xu/VRNVmEeycFe8v5ChyT305f8KaJVIhumu7M/eKAikkm\",\n        \"image\": \"https://i.imgur.com/XooCt5K.png\",\n        \"isAdmin\": false,\n        \"createdAt\": \"2019-06-22T09:00:43.000Z\",\n        \"updatedAt\": \"2019-06-23T01:16:31.000Z\"\n      }\n    }]\n  },\n  \"isFavorited\": false,\n  \"isLiked\": false\n};\nconst dummyUser = {\n  currentUser: {\n    id: 1,\n    name: '管理者',\n    email: 'root@example.com',\n    image: 'https://i.pravatar.cc/300',\n    isAdmin: true\n  },\n  isAuthenticated: true\n};\nexport default {\n  name: \"RestauranT\",\n  components: {\n    RestaurantDetail,\n    RestaurantComments,\n    CreateComment\n  },\n\n  data() {\n    return {\n      restaurant: {\n        id: -1,\n        name: \"\",\n        categoryName: \"\",\n        image: \"\",\n        openingHours: \"\",\n        tel: \"\",\n        address: \"\",\n        description: \"\",\n        isFavorited: false,\n        isLiked: false\n      },\n      restaurantComments: [],\n      currentUser: dummyUser.currentUser\n    };\n  },\n\n  // computed: {\n  //   ...mapState(['currentUser'])\n  // },\n  // beforeRouteUpdate (to, from, next) {\n  //   const { id: restaurantId } = to.params\n  //   this.fetchRestaurant(restaurantId)\n  //   next()\n  // },\n  created() {\n    const {\n      id\n    } = this.$route.params;\n    this.fetchRestaurant(id);\n  },\n\n  methods: {\n    fetchRestaurant(restaurantId) {\n      this.restaurant = {\n        id: dummyData.restaurant.id,\n        name: dummyData.restaurant.name,\n        categoryName: dummyData.restaurant.Category.name,\n        image: dummyData.restaurant.image,\n        openingHours: dummyData.restaurant.opening_hours,\n        tel: dummyData.restaurant.tel,\n        address: dummyData.restaurant.address,\n        description: dummyData.restaurant.description,\n        isFavorited: dummyData.isFavorited,\n        isLiked: dummyData.isLiked\n      };\n      this.restaurantComments = dummyData.restaurant.Comments;\n    },\n\n    // async fetchRestaurant(restaurantId) {\n    //   try {\n    //     const {data} = await restaurantsAPI.getRestaurant({ restaurantId })\n    //     const { restaurant, isFavorited, isLiked } = data;\n    //     const {\n    //       id,\n    //       name,\n    //       Category,\n    //       image,\n    //       opening_hours: openingHours,\n    //       tel,\n    //       address,\n    //       description,\n    //       Comments\n    //     } = restaurant\n    //     this.restaurant = {\n    //       id,\n    //       name,\n    //       categoryName: Category ? Category.name : '未分類',\n    //       image,\n    //       openingHours,\n    //       tel,\n    //       address,\n    //       description,\n    //       isFavorited,\n    //       isLiked,\n    //     };\n    //     this.restaurantComments = Comments\n    //   } catch (error) {\n    //     // STEP 6: 透過 restaurantsAPI 取得餐廳資訊\n    //     Toast.fire({\n    //       icon: 'error',\n    //       title: '無法取得餐廳資料，請稍後再試'\n    //     })\n    //   }      \n    // },\n    afterDeleteComment(commentId) {\n      this.restaurantComments = this.restaurantComments.filter(comment => comment.id !== commentId);\n    },\n\n    afterCreateComment(payload) {\n      console.log(payload); // const { commentId, restaurantId, text } = payload;\n      // this.restaurantComments.push({\n      //   id: commentId,\n      //   RestaurantId: restaurantId,\n      //   User: {\n      //     id: this.currentUser.id,\n      //     name: this.currentUser.name,\n      //   },\n      //   text,\n      //   createdAt: new Date(),\n      // });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoBA;AACA;AACA,4D,CACA;AACA;AACA;;AAEA;EACA;IACA,OADA;IAEA,oBAFA;IAGA,uBAHA;IAIA,6BAJA;IAKA,wBALA;IAMA,oCANA;IAOA,4EAPA;IAQA,uCARA;IASA,uCATA;IAUA,eAVA;IAWA;MACA,OADA;MAEA,eAFA;MAGA,uCAHA;MAIA;IAJA,CAXA;IAiBA,oBAjBA;IAkBA,gBAlBA;IAmBA,aACA;MACA,OADA;MAEA,qEAFA;MAGA,WAHA;MAIA,iBAJA;MAKA,uCALA;MAMA,uCANA;MAOA;QACA,OADA;QAEA,eAFA;QAGA,4BAHA;QAIA,0EAJA;QAKA,0CALA;QAMA,gBANA;QAOA,uCAPA;QAQA;MARA;IAPA,CADA;EAnBA,CADA;EAyCA,oBAzCA;EA0CA;AA1CA;AA4CA;EACAA;IACAC,KADA;IAEAC,WAFA;IAGAC,yBAHA;IAIAC,kCAJA;IAKAC;EALA,CADA;EAQAC;AARA;AAWA;EACAJ,kBADA;EAEAK;IACAC,gBADA;IAEAC,kBAFA;IAGAC;EAHA,CAFA;;EAOAC;IACA;MACAC;QACAX,MADA;QAEAC,QAFA;QAGAW,gBAHA;QAIAT,SAJA;QAKAU,gBALA;QAMAC,OANA;QAOAC,WAPA;QAQAC,eARA;QASAC,kBATA;QAUAC;MAVA,CADA;MAaAC,sBAbA;MAcApB;IAdA;EAgBA,CAxBA;;EAyBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAqB;IACA;MAAApB;IAAA;IACA;EACA,CApCA;;EAqCAqB;IACAC;MAGA;QACAtB,2BADA;QAEAC,+BAFA;QAGAW,gDAHA;QAIAT,iCAJA;QAKAU,gDALA;QAMAC,6BANA;QAOAC,qCAPA;QAQAC,6CARA;QASAC,kCATA;QAUAC;MAVA;MAaA;IACA,CAlBA;;IAmBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAK;MACA,yDACAC,mCADA;IAGA,CA7DA;;IA8DAC;MACAC,qBADA,CAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;EA3EA;AArCA","names":["currentUser","id","name","email","image","isAdmin","isAuthenticated","components","RestaurantDetail","RestaurantComments","CreateComment","data","restaurant","categoryName","openingHours","tel","address","description","isFavorited","isLiked","restaurantComments","created","methods","fetchRestaurant","afterDeleteComment","comment","afterCreateComment","console"],"sourceRoot":"src/views","sources":["RestauranT.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <h1>餐廳描述頁</h1>\r\n    <!-- 餐廳資訊頁 RestaurantDetail -->\r\n    <RestaurantDetail :initial-restaurant=\"restaurant\" />\r\n    <hr />\r\n    <!-- 餐廳評論 RestaurantComments -->\r\n    <RestaurantComments\r\n      :restaurant-comments=\"restaurantComments\"\r\n      @after-delete-comment=\"afterDeleteComment\"\r\n    />\r\n    <!-- 新增評論 CreateComment -->\r\n    <CreateComment\r\n      :restaurant-id=\"restaurant.id\"\r\n      @after-create-comment=\"afterCreateComment\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RestaurantDetail from \"../components/RestaurantDetail.vue\";\r\nimport RestaurantComments from \"../components/RestaurantComments.vue\";\r\nimport CreateComment from \"../components/CreateComment.vue\";\r\n// import restaurantsAPI from './../apis/restaurants'\r\n// import { Toast } from './../utils/helpers'\r\n// import { mapState } from \"vuex\";\r\n\r\nconst dummyData = {\r\n  \"restaurant\": {\r\n        \"id\": 1,\r\n        \"name\": \"Judy Runte\",\r\n        \"tel\": \"(918) 827-1962\",\r\n        \"address\": \"98138 Elisa Road\",\r\n        \"opening_hours\": \"08:00\",\r\n        \"description\": \"dicta et cupiditate\",\r\n        \"image\": \"https://loremflickr.com/320/240/food,dessert,restaurant/?random=1\",\r\n        \"createdAt\": \"2019-06-22T09:00:43.000Z\",\r\n        \"updatedAt\": \"2019-06-22T09:00:43.000Z\",\r\n        \"CategoryId\": 3,\r\n        \"Category\": {\r\n            \"id\": 3,\r\n            \"name\": \"義大利料理\",\r\n            \"createdAt\": \"2019-06-22T09:00:43.000Z\",\r\n            \"updatedAt\": \"2019-06-22T09:00:43.000Z\"\r\n        },\r\n        \"FavoritedUsers\": [],\r\n        \"LikedUsers\": [],\r\n        \"Comments\": [\r\n            {\r\n                \"id\": 3,\r\n                \"text\": \"Quos asperiores in nostrum cupiditate excepturi aspernatur.\",\r\n                \"UserId\": 2,\r\n                \"RestaurantId\": 1,\r\n                \"createdAt\": \"2019-06-22T09:00:43.000Z\",\r\n                \"updatedAt\": \"2019-06-22T09:00:43.000Z\",\r\n                \"User\": {\r\n                    \"id\": 2,\r\n                    \"name\": \"user1\",\r\n                    \"email\": \"user1@example.com\",\r\n                    \"password\": \"$2a$10$0ISHJI48xu/VRNVmEeycFe8v5ChyT305f8KaJVIhumu7M/eKAikkm\",\r\n                    \"image\": \"https://i.imgur.com/XooCt5K.png\",\r\n                    \"isAdmin\": false,\r\n                    \"createdAt\": \"2019-06-22T09:00:43.000Z\",\r\n                    \"updatedAt\": \"2019-06-23T01:16:31.000Z\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"isFavorited\": false,\r\n    \"isLiked\": false\r\n}\r\nconst dummyUser = {\r\n  currentUser: {\r\n    id: 1,\r\n    name: '管理者',\r\n    email: 'root@example.com',\r\n    image: 'https://i.pravatar.cc/300',\r\n    isAdmin: true\r\n  },\r\n  isAuthenticated: true\r\n}\r\n\r\nexport default {\r\n  name:\"RestauranT\",\r\n  components: {    \r\n    RestaurantDetail,\r\n    RestaurantComments,\r\n    CreateComment,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurant: {\r\n        id: -1,\r\n        name: \"\",\r\n        categoryName: \"\",\r\n        image: \"\",\r\n        openingHours: \"\",\r\n        tel: \"\",\r\n        address: \"\",\r\n        description: \"\",\r\n        isFavorited: false,\r\n        isLiked: false,\r\n      },\r\n      restaurantComments: [],     \r\n      currentUser: dummyUser.currentUser\r\n    };\r\n  },\r\n  // computed: {\r\n  //   ...mapState(['currentUser'])\r\n  // },\r\n  // beforeRouteUpdate (to, from, next) {\r\n  //   const { id: restaurantId } = to.params\r\n  //   this.fetchRestaurant(restaurantId)\r\n  //   next()\r\n  // },\r\n  created() {\r\n    const { id } = this.$route.params;\r\n    this.fetchRestaurant(id);\r\n  },\r\n  methods: {\r\n    fetchRestaurant (restaurantId) {\r\n     \r\n\r\n      this.restaurant = {\r\n        id: dummyData.restaurant.id,\r\n        name: dummyData.restaurant.name,\r\n        categoryName: dummyData.restaurant.Category.name,\r\n        image: dummyData.restaurant.image,\r\n        openingHours: dummyData.restaurant.opening_hours,\r\n        tel: dummyData.restaurant.tel,\r\n        address: dummyData.restaurant.address,\r\n        description: dummyData.restaurant.description,\r\n        isFavorited: dummyData.isFavorited,\r\n        isLiked: dummyData.isLiked,\r\n      }\r\n\r\n      this.restaurantComments = dummyData.restaurant.Comments\r\n    },  \r\n    // async fetchRestaurant(restaurantId) {\r\n    //   try {\r\n    //     const {data} = await restaurantsAPI.getRestaurant({ restaurantId })\r\n    //     const { restaurant, isFavorited, isLiked } = data;\r\n    //     const {\r\n    //       id,\r\n    //       name,\r\n    //       Category,\r\n    //       image,\r\n    //       opening_hours: openingHours,\r\n    //       tel,\r\n    //       address,\r\n    //       description,\r\n    //       Comments\r\n    //     } = restaurant\r\n\r\n    //     this.restaurant = {\r\n    //       id,\r\n    //       name,\r\n    //       categoryName: Category ? Category.name : '未分類',\r\n    //       image,\r\n    //       openingHours,\r\n    //       tel,\r\n    //       address,\r\n    //       description,\r\n    //       isFavorited,\r\n    //       isLiked,\r\n    //     };\r\n\r\n    //     this.restaurantComments = Comments\r\n    //   } catch (error) {\r\n    //     // STEP 6: 透過 restaurantsAPI 取得餐廳資訊\r\n    //     Toast.fire({\r\n    //       icon: 'error',\r\n    //       title: '無法取得餐廳資料，請稍後再試'\r\n    //     })\r\n    //   }      \r\n    // },\r\n    afterDeleteComment(commentId) {\r\n      this.restaurantComments = this.restaurantComments.filter(\r\n        (comment) => comment.id !== commentId\r\n      );\r\n    },\r\n    afterCreateComment(payload) {\r\n      console.log(payload)\r\n      // const { commentId, restaurantId, text } = payload;\r\n      // this.restaurantComments.push({\r\n      //   id: commentId,\r\n      //   RestaurantId: restaurantId,\r\n      //   User: {\r\n      //     id: this.currentUser.id,\r\n      //     name: this.currentUser.name,\r\n      //   },\r\n      //   text,\r\n      //   createdAt: new Date(),\r\n      // });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}