{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport AdminRestaurantForm from \"./../components/AdminRestaurantForm.vue\";\nimport adminAPI from './../apis/admin';\nimport { Toast } from './../utils/helpers';\nexport default {\n  name: \"AdminRestaurantEdit\",\n  components: {\n    AdminRestaurantForm\n  },\n\n  data() {\n    return {\n      restaurant: {\n        id: -1,\n        name: \"\",\n        categoryId: \"\",\n        tel: \"\",\n        address: \"\",\n        description: \"\",\n        image: \"\",\n        openingHours: \"\"\n      }\n    };\n  },\n\n  created() {\n    const {\n      id\n    } = this.$route.params;\n    this.fetchRestaurant(id);\n  },\n\n  methods: {\n    async fetchRestaurant(restaurantId) {\n      try {\n        const {\n          data\n        } = await adminAPI.restaurants.getDetail({\n          restaurantId\n        });\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        const {\n          id,\n          name,\n          tel,\n          address,\n          opening_hours: openingHours,\n          description,\n          image,\n          CategoryId: categoryId\n        } = data.restaurant;\n        this.restaurant = { ...this.restaurant,\n          id,\n          name,\n          tel,\n          address,\n          openingHours,\n          description,\n          image,\n          categoryId\n        };\n      } catch (error) {\n        console.error(error.message);\n        Toast.fire({\n          icon: 'error',\n          title: '無法取得餐廳資料，請稍後再試'\n        });\n      }\n    },\n\n    handleAfterSubmit(formData) {\n      // 透過 API 將表單資料送到伺服器\n      for (let [name, value] of formData.entries()) {\n        console.log(name + \": \" + value);\n      }\n    },\n\n    fetchRestaurant(restaurantId) {\n      console.log(\"fetchRestaurant id:\", restaurantId);\n      const {\n        id,\n        name,\n        CategoryId,\n        tel,\n        address,\n        description,\n        image,\n        opening_hours\n      } = dummyData.restaurant;\n      this.restaurant = { ...this.restaurant,\n        id,\n        name,\n        categoryId: CategoryId,\n        tel,\n        address,\n        description,\n        image,\n        openingHours: opening_hours\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAUA;AACA;AACA;AAEA;EACAA,2BADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC;QACAC,MADA;QAEAL,QAFA;QAGAM,cAHA;QAIAC,OAJA;QAKAC,WALA;QAMAC,eANA;QAOAC,SAPA;QAQAC;MARA;IADA;EAYA,CAlBA;;EAmBAC;IACA;MAAAP;IAAA;IACA;EACA,CAtBA;;EAuBAQ;IACA;MACA;QACA;UAAAV;QAAA;UAAAW;QAAA;;QAEA;UACA;QACA;;QAEA;UACAT,EADA;UAEAL,IAFA;UAGAO,GAHA;UAIAC,OAJA;UAKAO,2BALA;UAMAN,WANA;UAOAC,KAPA;UAQAM;QARA,IASAb,eATA;QAUA,oBACA,kBADA;UAEAE,EAFA;UAGAL,IAHA;UAIAO,GAJA;UAKAC,OALA;UAMAG,YANA;UAOAF,WAPA;UAQAC,KARA;UASAJ;QATA;MAYA,CA7BA,CA6BA;QACAW;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA,CAtCA;;IAuCAC;MACA;MACA;QACAJ;MACA;IACA,CA5CA;;IA6CAK;MACAL;MACA;QACAZ,EADA;QAEAL,IAFA;QAGAgB,UAHA;QAIAT,GAJA;QAKAC,OALA;QAMAC,WANA;QAOAC,KAPA;QAQAK;MARA,IASAQ,oBATA;MAUA,oBACA,kBADA;QAEAlB,EAFA;QAGAL,IAHA;QAIAM,sBAJA;QAKAC,GALA;QAMAC,OANA;QAOAC,WAPA;QAQAC,KARA;QASAC;MATA;IAWA;;EApEA;AAvBA","names":["name","components","AdminRestaurantForm","data","restaurant","id","categoryId","tel","address","description","image","openingHours","created","methods","restaurantId","opening_hours","CategoryId","console","Toast","icon","title","handleAfterSubmit","fetchRestaurant","dummyData"],"sourceRoot":"src/views","sources":["AdminRestaurantEdit.vue"],"sourcesContent":["<template>\r\n  <div class=\"container py-5\">\r\n    <AdminRestaurantForm\r\n      :initial-restaurant=\"restaurant\"\r\n      @after-submit=\"handleAfterSubmit\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AdminRestaurantForm from \"./../components/AdminRestaurantForm.vue\";\r\nimport adminAPI from './../apis/admin'\r\nimport { Toast } from './../utils/helpers'\r\n\r\nexport default {\r\n  name: \"AdminRestaurantEdit\",\r\n  components: {\r\n    AdminRestaurantForm,\r\n  },\r\n  data() {\r\n    return {\r\n      restaurant: {\r\n        id: -1,\r\n        name: \"\",\r\n        categoryId: \"\",\r\n        tel: \"\",\r\n        address: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        openingHours: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    const { id } = this.$route.params;\r\n    this.fetchRestaurant(id);\r\n  },\r\n  methods: {\r\n    async fetchRestaurant (restaurantId){\r\n      try {\r\n        const { data } = await adminAPI.restaurants.getDetail({ restaurantId })\r\n\r\n        if (data.status === 'error') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        const {\r\n          id,\r\n          name,\r\n          tel,\r\n          address,\r\n          opening_hours: openingHours,\r\n          description,\r\n          image,\r\n          CategoryId: categoryId\r\n        } = data.restaurant\r\n        this.restaurant = {\r\n          ...this.restaurant,\r\n          id,\r\n          name,\r\n          tel,\r\n          address,\r\n          openingHours,\r\n          description,\r\n          image,\r\n          categoryId\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(error.message)\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得餐廳資料，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    handleAfterSubmit(formData) {\r\n      // 透過 API 將表單資料送到伺服器\r\n      for (let [name, value] of formData.entries()) {\r\n        console.log(name + \": \" + value);\r\n      }\r\n    },\r\n    fetchRestaurant(restaurantId) {\r\n      console.log(\"fetchRestaurant id:\", restaurantId);\r\n      const {\r\n        id,\r\n        name,\r\n        CategoryId,\r\n        tel,\r\n        address,\r\n        description,\r\n        image,\r\n        opening_hours,\r\n      } = dummyData.restaurant;\r\n      this.restaurant = {\r\n        ...this.restaurant,\r\n        id,\r\n        name,\r\n        categoryId: CategoryId,\r\n        tel,\r\n        address,\r\n        description,\r\n        image,\r\n        openingHours: opening_hours,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}