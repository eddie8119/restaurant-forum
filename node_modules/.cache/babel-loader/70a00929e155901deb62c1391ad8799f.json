{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport UserProfileCard from \"./../components/UserProfileCard.vue\";\nimport UserFollowingsCard from \"./../components/UserFollowingsCard.vue\";\nimport UserFollowersCard from \"./../components/UserFollowersCard.vue\";\nimport UserCommentsCard from \"./../components/UserCommentsCard.vue\";\nimport UserFavoritedRestaurantsCard from \"./../components/UserFavoritedRestaurantsCard.vue\";\nimport usersAPI from './../apis/users';\nimport { Toast } from './../utils/helpers';\nexport default {\n  name: \"UseR\",\n  components: {\n    UserProfileCard,\n    UserFollowingsCard,\n    UserFollowersCard,\n    UserCommentsCard,\n    UserFavoritedRestaurantsCard\n  },\n\n  data() {\n    return {\n      user: {\n        id: -1,\n        name: \"\",\n        email: \"\",\n        image: \"\",\n        followingsLength: 0,\n        followersLength: 0,\n        commentsLength: 0,\n        favoritedRestaurantsLength: 0\n      },\n      comments: [],\n      favoritedRestaurants: [],\n      followers: [],\n      followings: [],\n      isFollowed: false\n    };\n  },\n\n  created() {\n    const {\n      id\n    } = this.$router.params;\n    this.fetchUser(id);\n  },\n\n  beforeRouteUpdate(to, from, next) {\n    const {\n      id\n    } = to.params;\n    this.fetchUser(id);\n    next();\n  },\n\n  methods: {\n    async fetchUser(userId) {\n      try {\n        const {\n          data\n        } = await usersAPI.get({\n          userId\n        });\n\n        if (data.status === 'error') {\n          throw new Error(data.message);\n        }\n\n        const {\n          profile,\n          isFollowed\n        } = data;\n        const {\n          id,\n          image,\n          name,\n          email,\n          Followings,\n          Followers,\n          // Comments,\n          FavoritedRestaurants\n        } = profile;\n        this.user = { ...this.user,\n          id,\n          name,\n          email,\n          image,\n          followingsLength: Followings.length,\n          followersLength: Followers.length,\n          commentsLength: this.comments.length,\n          favoritedRestaurantsLength: FavoritedRestaurants.length\n        };\n        this.isFollowed = isFollowed;\n        this.followings = Followings;\n        this.followers = Followers;\n        this.favoritedRestaurants = FavoritedRestaurants;\n      } catch (error) {\n        console.error(error.message);\n        Toast.fire({\n          icon: 'error',\n          title: '無法取得使用者資料，請稍後再試'\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;EACAA,YADA;EAEAC;IACAC,eADA;IAEAC,kBAFA;IAGAC,iBAHA;IAIAC,gBAJA;IAKAC;EALA,CAFA;;EASAC;IACA;MACAC;QACAC,MADA;QAEAT,QAFA;QAGAU,SAHA;QAIAC,SAJA;QAKAC,mBALA;QAMAC,kBANA;QAOAC,iBAPA;QAQAC;MARA,CADA;MAWAC,YAXA;MAYAC,wBAZA;MAaAC,aAbA;MAcAC,cAdA;MAeAC;IAfA;EAiBA,CA3BA;;EA4BAC;IACA;MAAAZ;IAAA;IACA;EACA,CA/BA;;EAgCAa;IACA;MAAAb;IAAA;IACA;IACAc;EACA,CApCA;;EAqCAC;IACA;MACA;QACA;UAAAjB;QAAA;UAAAkB;QAAA;;QAEA;UACA;QACA;;QAEA;UAAAC;UAAAN;QAAA;QACA;UACAX,EADA;UAEAE,KAFA;UAGAX,IAHA;UAIAU,KAJA;UAKAiB,UALA;UAMAC,SANA;UAOA;UACAC;QARA,IASAH,OATA;QAWA,cACA,YADA;UAEAjB,EAFA;UAGAT,IAHA;UAIAU,KAJA;UAKAC,KALA;UAMAC,mCANA;UAOAC,iCAPA;UAQAC,oCARA;UASAC;QATA;QAWA;QACA;QACA;QACA;MACA,CAlCA,CAkCA;QACAe;QACAC;UACAC,aADA;UAEAC;QAFA;MAIA;IACA;;EA3CA;AArCA","names":["name","components","UserProfileCard","UserFollowingsCard","UserFollowersCard","UserCommentsCard","UserFavoritedRestaurantsCard","data","user","id","email","image","followingsLength","followersLength","commentsLength","favoritedRestaurantsLength","comments","favoritedRestaurants","followers","followings","isFollowed","created","beforeRouteUpdate","next","methods","userId","profile","Followings","Followers","FavoritedRestaurants","console","Toast","icon","title"],"sourceRoot":"src/views","sources":["UseR.vue"],"sourcesContent":["<template>\r\n  <div class=\"album py-5 bg-light\">\r\n    <div class=\"container\">\r\n      <div class=\"card mb-3\">\r\n        <!-- UserProfileCard -->\r\n        <UserProfileCard \r\n          :user=\"user\" \r\n          :initial-is-followed=\"isFollowed\" \r\n        />\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <!-- UserFollowingsCard -->\r\n          <UserFollowingsCard :followings=\"followings\" />\r\n\r\n          <br />\r\n          <!-- UserFollowersCard -->\r\n          <UserFollowersCard :followers=\"followers\" />\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n          <!-- UserCommentsCard -->\r\n          <UserCommentsCard :comments=\"comments\" />\r\n\r\n          <br />\r\n          <!-- UserFavoritedRestaurantsCard -->\r\n          <UserFavoritedRestaurantsCard\r\n            :favoritedRestaurants=\"favoritedRestaurants\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserProfileCard from \"./../components/UserProfileCard.vue\";\r\nimport UserFollowingsCard from \"./../components/UserFollowingsCard.vue\";\r\nimport UserFollowersCard from \"./../components/UserFollowersCard.vue\";\r\nimport UserCommentsCard from \"./../components/UserCommentsCard.vue\";\r\nimport UserFavoritedRestaurantsCard from \"./../components/UserFavoritedRestaurantsCard.vue\";\r\nimport usersAPI from './../apis/users'\r\nimport { Toast } from './../utils/helpers'\r\n\r\n\r\nexport default {\r\n  name:\"UseR\",\r\n  components: {\r\n    UserProfileCard,\r\n    UserFollowingsCard,\r\n    UserFollowersCard,\r\n    UserCommentsCard,\r\n    UserFavoritedRestaurantsCard,\r\n  },\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: -1,\r\n        name: \"\",\r\n        email: \"\",\r\n        image: \"\",\r\n        followingsLength: 0,\r\n        followersLength: 0,\r\n        commentsLength: 0,\r\n        favoritedRestaurantsLength: 0,\r\n      },\r\n      comments: [],\r\n      favoritedRestaurants: [],\r\n      followers: [],\r\n      followings: [],\r\n      isFollowed: false,\r\n    };\r\n  },\r\n  created() {\r\n    const {id} = this.$router.params    \r\n    this.fetchUser(id)\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    const {id} = to.params\r\n    this.fetchUser(id)\r\n    next()    \r\n  },\r\n  methods: {\r\n    async fetchUser (userId) {\r\n      try {\r\n        const {data} = await usersAPI.get({userId})\r\n\r\n        if (data.status === 'error') {\r\n          throw new Error(data.message)\r\n        }\r\n\r\n        const { profile, isFollowed } = data\r\n        const {\r\n          id,\r\n          image,\r\n          name,\r\n          email,\r\n          Followings,\r\n          Followers,\r\n          // Comments,\r\n          FavoritedRestaurants\r\n        } = profile\r\n\r\n        this.user = {\r\n          ...this.user,\r\n          id,\r\n          name,\r\n          email,\r\n          image,\r\n          followingsLength: Followings.length,\r\n          followersLength: Followers.length,\r\n          commentsLength: this.comments.length,\r\n          favoritedRestaurantsLength: FavoritedRestaurants.length,                    \r\n        }\r\n        this.isFollowed = isFollowed\r\n        this.followings = Followings\r\n        this.followers = Followers\r\n        this.favoritedRestaurants = FavoritedRestaurants        \r\n      } catch (error) {\r\n        console.error(error.message)\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得使用者資料，請稍後再試'\r\n        })\r\n      }     \r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}